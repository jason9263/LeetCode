/* The read4 API is defined in the parent class Reader4.
      int read4(char[] buf); */

public class Solution extends Reader4 {
    /**
     * @param buf Destination buffer
     * @param n   Maximum number of characters to read
     * @return    The number of characters read
     */

    private int bufptr = 0;
    private int bufcnt = 0;
    private char[] tmp = new char[4];
    
    public int read(char[] buf, int n) {
        int ptr = 0;
        
    
        while(ptr < n){
        
        if(bufptr == 0){
            bufcnt = read4(tmp);    
        }
        
        if(bufcnt == 0){
            break;
        }
        
        while(bufptr <  bufcnt && ptr < n){
            buf[ptr++] = tmp[bufptr++];
        }
        
        if(bufptr >= bufcnt){
            bufptr = 0;
        }   
            
        }
        
        return ptr;
        
    }
}




/* The read4 API is defined in the parent class Reader4.
      int read4(char[] buf); */

public class Solution extends Reader4 {
    /**
     * @param buf Destination buffer
     * @param n   Maximum number of characters to read
     * @return    The number of characters read
     */
    
    public int bufptr = 0;
    public int bufcnt = 0;
    public char[] tmpbuf = new char[4];
    
    public int read(char[] buf, int n) {
        
        int ptr = 0;
        
        while(ptr < n){
            
            if(bufptr == 0 ){
                bufcnt = read4(tmpbuf);
            }
            
            if(bufcnt == 0){
                break;
            }

            while(ptr < n && bufptr < bufcnt){
                buf[ptr++] = tmpbuf[bufptr++];
            }
            
            if(bufcnt <= bufptr){
               bufptr = 0; 
            }    
        }
        
        return ptr;
    }
}