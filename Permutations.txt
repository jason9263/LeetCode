class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> out = new ArrayList<>();
        Arrays.sort(nums);
        boolean[] used = new boolean[nums.length];
        backtrack(res,out,nums,used);
        return res;
    }
    
    public void backtrack(List<List<Integer>> res, List<Integer> out, int[] nums, boolean[] used){
        if(out.size() == nums.length){
            res.add(new ArrayList<Integer>(out) );
           
        }else{
            
        for(int i = 0; i < nums.length; i++){
            
            if(used[i]){
                continue;
            }
            
            used[i] = true;
            out.add(nums[i]);
            
            backtrack(res,out,nums,used);
            
            used[i] = false;
            out.remove(out.size()-1);
        }   
            
        }
    }
}