public class PhoneDirectory {
    
    public Set<Integer> set = new HashSet<Integer>();
    public Queue<Integer> q = new LinkedList<Integer>();
    public int max = -1;

    /** Initialize your data structure here
        @param maxNumbers - The maximum numbers that can be stored in the phone directory. */
    public PhoneDirectory(int maxNumbers) {
        max = maxNumbers;
        for(int i = 0; i < maxNumbers; i++){
            q.offer(i);
        }
    }
    
    /** Provide a number which is not assigned to anyone.
        @return - Return an available number. Return -1 if none is available. */
    public int get() {
        if(q.size() > 0){
            int tmp = q.poll();
            set.add(tmp);
            return tmp;
        }else{
            return -1;
        }
    }
    
    /** Check if a number is available or not. */
    public boolean check(int number) {
        if(set.contains(number)){
            return false;
        }else{
            return true;
        }
    }
    
    /** Recycle or release a number. */
    public void release(int number) {
        if(number >= 0 && number < max && set.contains(number)){
            set.remove(number);
            q.offer(number);
        }
    }
}

/**
 * Your PhoneDirectory object will be instantiated and called as such:
 * PhoneDirectory obj = new PhoneDirectory(maxNumbers);
 * int param_1 = obj.get();
 * boolean param_2 = obj.check(number);
 * obj.release(number);
 */