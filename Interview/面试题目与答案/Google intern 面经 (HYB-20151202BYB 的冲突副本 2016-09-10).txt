 Permutations 全排列，
 Combinations 组合项， 
 N-Queens N皇后问题
 KMP 算法
 DFS BFS and level scaning

二进制操作

[LeetCode] Read N Characters Given Read4
by 达达主义 • November 23, 2014 • 3 Comments

The API: int read4(char *buf) reads 4 characters at a time from a file.
The return value is the actual number of characters read. For example, it returns 3 if there is only 3 characters left in the file.
By using the read4 API, implement the function int read(char *buf, int n) that reads n characters from the file.

Note:
The read function will only be called once for each test case.

[分析]
每次只能读如4个字符，但是n不一定是n的整数倍。直接一个while循环，然后在里面判断读出来的buff长度是不是小于4。另外，文件的字符数可能少于n。所以需要有eof变量在循环体中做判断。

[注意事项]
1）最后一次读出来的buff长度有可能等于4，所以在while循环的判断条件中，需要加上 readBytes < n [Code]


public class Solution {
/* The read4 API is defined in the parent class Reader4.
      int read4(char[] buf); */
public class Solution extends Reader4 {
   /**
    * @param buf Destination buffer
    * @param n   Maximum number of characters to read
    * @return    The number of characters read
    */
   public int read(char[] buf, int n) {
      char[] buffer = new char[4];
      int readBytes = 0;
      boolean eof = false;
      while (!eof && readBytes < n) {
          int sz = read4(buffer);
          if (sz < 4) eof = true;
          int bytes = Math.min(n - readBytes, sz); 
          System.arraycopy(buffer /* src */, 0 /* srcPos */, buf /* dest */, readBytes /* destPos */, bytes /* length */);
      readBytes += bytes;
}
      return readBytes;
   }
}


Given a sorted integer array where the range of elements are [0, 99] inclusive, return its missing ranges.
For example, given [0, 1, 3, 50, 75], return [“2”, “4->49”, “51->74”, “76->99”]

[分析]
一遍线性扫描即可。

[注意事项]
1）针对一些特殊情况，询问面试官，比如说如果array是个空的，或者array包含区间内的所有元素，相应的返回值是什么
2）可以给出一些有意思的test case，另外就是不需要限制给出的范围是[0, 99]，用start和end表示就行。在面试的时候可以先提一下，写出[0, 99]的代码，然后在稍作修改，变成start和end的版本。

[Code]
public class Solution {
    public List<String> findMissingRanges(int[] vals, int start, int end) {
        List<String> ranges = new ArrayList<String>();
        int prev = start - 1;
        for (int i=0; i<=vals.length; ++i) {
            int curr = (i==vals.length) ? end + 1 : vals[i];
            if ( cur-prev>=2 ) {
                ranges.add(getRange(prev+1, curr-1));
            }
            prev = curr;
        }
        return ranges;
    }
 
    private String getRange(int from, int to) {
        return (from==to) ? String.valueOf(from) : from + "->" + to;
    }
}



2014(1-3月) 码农类 博士 实习@Google - 网上海投 - 技术电面 |Other
两轮的流程都是上来先介绍自己和自己的team，然后问了下我的经历爱好神马的，然后上面试题...
第一轮上来是一个很简单很简单的编程题，题目类似实现基于array的stack里面动态申请空间的部分，但是比那个还简单...我被难度雷到了然后各种试图找边界条件问需不需要考虑，最后得到的答案是我想多了...然后是一个2D动态规划的算法题，类似leetcode里最大矩形面积那个题，但要简单些。比较雷的是我其实只有想到一半面官就以为我完全想出来了，然后很高兴地说对的对的，这个方法把我下一问也解决了呢，然后连code都不用了，开始继续聊天...
第二轮上来是一个类似LRU设计的题，难度也和LRU类似。然后我没写完整的代码面官就表示可以了，继续问下一题。然后悲剧开始了。第二个题是一个有点麻烦但是本来应该没难度的编程题，就是几块buffer之间互相copy来copy去，比CTCI难度都低。一开始我听面官的印度英语压力很大而且竟然nc没发现面官把题目贴在下一页了，导致理解题目很不顺，一开始漏考虑各种case。花了挺久才搞明白时，code已经很凌乱了...中间还电话掉线...好在最后基本写对了...正在长吁一口气打算找问题问面官的时候人说，我还有followup，这个题请给test case...很凌乱没有逻辑地讲了几个...

最后想说准备的时候看太多难题也不好。我刷了两遍leetcode，最后几天难题看得很多。结果今天面试看到简单题就慌，要说栽了也是栽在一个简单题上....
还有我怎么觉得竟然没有被问tree也没有被问二分查找感觉很不典型呢...





2016(7-9月) 码农类 硕士 实习@Google - 内推 - 技术电面 |Other其他
       10月13日@UCSD  
        第一个人是个老美。进去之后他说要先介绍下背景。自行脑补我的土鳖英语。。。
        “我是master第一年。如你所见我是转专业狗，你看我选的那些课，根本没啥方向。我就是想先各个方向都学学看，看看我感兴趣啥。”
        “嗯，没关系！我看你选了数据库哈！我就是搞这个方向的，在分布式数据库上balabalabala”
        “哦！你是说分布式系统呀！那个我之前也研究了，但是感觉太难了，就没选。。。”
        “行了！我们不废话了，做题吧！”
        题目是leetcode的read4，4变成了4096，以及相应follow up
        白板开始写题。。。好水。。。写完了。。
        “我把你代码拍下来吧！”
        “好啊！”
        “我把这题改一下吧！”
        “那个，我觉得我写得还不够好。要是现在这个函数调用多次，可能我这个方法需要再补充一些东西。”
        “嗯，这就是我想问的。你写吧！”
        白板开始写题。。。心中一万只草泥马！让你昨天不把这题做了！傻逼了吧！
        先写了初次调用的版本，在上一题的基础上加了私有变量，存下已经读出的，但超过当前需要的字符。期间忘了memcpy的参数顺序了，直接问他。他说没事儿，他也经常忘。
        “嗯，这个应该是比较simple的case。然后我要开始写上面的部分了！”
        先写了如果发现还剩下一些以前读过的字符没有读，就先处理这部分。
        “嗯，写好了！从头到尾检查下！balabalabala嗯，要是我需要的字符比之前剩的字符少的话，我这个代码就又有bug了。我来加一段话！”
        最后的版本功能上还OK。有个read4096我写成了read4无伤大雅。最开始我私有变量开的是char* mem，在他的提示下改成了char mem[4096]，这样不用每次都malloc。最后讲解的时候时间有点紧，他提醒我画图讲解。
        面试期间的问题：
1.        代码不够简洁，第一题刚看了眼，很多discuss里的代码都比我短。第二题，我面试的时候就自己提到了，有几段话应该写成同样的函数，到时候调用就好了。
2.        感觉互动不多，写代码是眼神交流比较少，沉浸在了码代码的自我陶醉之中。
3.      今天反应过来忘考虑了一种情况，就是文件本身的长度比n短，但是他怎么不当场指出来啊＝ ＝
        第二个人应该是个亚裔或者亚洲人，不知道是中国的还是日本的。看脸的话日本的面大点。一上来也是先介绍背景。然后问我最喜欢的一门课。我说是microprocessor based system，讲了讲我们从无到有propose idea到最后结合各科知识做出来东西的过程。
        然后他说看我汉语日语都会，他就问我用户在搜索东西的时候输的是汉字，搜索引擎怎么判断返回中文还是日文结果。
         “日语和汉语即使是汉字也不一样的呀。哪怕书写一样，其实对计算机来说也是有区别的”
        “嗯，不过我们考虑这个因素呢”
        “可以看看用户的IP地址是在哪里？”（之后想想这个回答好傻逼啊）
        “嗯，也可以。不过比如中国人在日本呢？或者说在德国。”
        “那我们可以看用户的输入。比如同样是东京，汉语是‘东京’，日语就是‘東京’。用户在输入的过程中也不一样。加入中国人使用拼音输入法，日本人使用罗马字输入法。那么汉语就是‘dongjing’，日语就是‘toukyo’。其实我们可以把各种语言的拼写样本收集起来，训练这个搜索引擎，这样就什么语言都能判断了。”
        “还有什么想法么？”
        “嗯。。。可能还可以看看用户的历史纪录，看看他经常访问的是什么语言的网页？”
        “嗯，其实用户如果log in的话，可以设置默认语言，或者看浏览器的默认语言。”
        “。。。。。。”好吧。。。。。。
        “好，我们聊点别的。假如我要传文件给别人，有什么方法？”
        “U盘或者CD（这个回答也好二啊！），或者像google drive之类的网盘，或者airdrop什么的。”
        “你对TCP熟悉吗？”
        “不太熟。。。”
        “SSH呢？”
        “不好意思，也不太熟。。。”（我是转专业狗啊！）
        “没事儿！那假如我要把一个文件传给多个用户，有什么好方法？”
        “我可以先传给几个用户，让他们帮我接着传。我project里面有写实现过简单的p2p，就用类似这样的方法就行了。”
        “那如果我想给几个人传文件，我可以一个个用户传。那我怎么不并行着传呢？这不就更快了么。”
        “这对效率没什么提高，一个人的带宽就这么多。”
        “好，那用你刚才说的方法，我用什么策略来决定谁应该传给谁。”
        我之前做这个project的时候用的是随机的方法，效果很不理想，所以我就没说。我同学做的时候用了博弈论的方法，之前他做presentation讲解的时候没好好听＝ ＝好吧，临场创造别的方法吧。
        “我可以提前拿到整个网络的拓扑结构吗？”
        “你要这个干嘛？”
        “比如说我要是知道了拓扑结构，我可以先传给后续结点比较多的用户，或者说比较dense的区域。或者我可以用类似求最短路的方法，求出到任意点带宽最优的路径。”
        “嗯，除了带宽之外还有啥能考虑的？”
        这里有点儿卡了。。。其实之前他也引导了我很多次，网络好久不复习了，瞎逼乱说。。。很多概念之间的区别联系我都忘了。。。这个时候我想到了latency，但是认为latency就是由bandwidth影响的，所以没必要再提了。其实之后查了下，发现我的理解有些偏差，可以学学 https://docs.google.com/a/chromium.org/viewer?a=v&pid=sites&srcid=Y2hyb21pdW0ub3JnfGRldnxneDoxMzcyOWI1N2I4YzI3NzE2
        为了不必要的尴尬，他给我画了个图提示了下。
        “是不是还可以考虑路径中需要多少hop？跳数多了可能就丢包的概率就大了？”
        “其实你还可以考虑latency，balabalabala”卧槽！刚刚想到latency的时候就应该勇敢地喊出来啊！然而当时并没意识到，latency和bandwidth可以当作不同的criteria

        “嗯，我们来做题吧！”
        好几行数对(a,b)，表示在一棵树中a是b的儿子，还原这颗树。
        可能看时间不够了，或者我前面回答得太傻了，出了个简单题。hash水过，然后说了下如果想找到根的话，可以随便挑个结点往上直接找。反正树是DAG，而且我是从内部结点往根走，一下就能找到了，很快的。
        “那我怎么判断这颗树有多少个结点？”
        “直接输出hash.size()”
        “如果我从读入的数据直接判断呢？”
        “你是说我不能用hash？”
        “你也可以用，不过比如我告诉你有500行输入，那么有多少个结点呢？”
        “那有501个吧！不过那得是没有重复输入”
        “嗯，这倒是。还能想到什么invalid input？”
        “比如可能输入本身成环了，这个在输入的时候记录相对深度，再配合并查集应该能在读入时候判断了。”
        “嗯，我没啥问的了，我看看时间哈！”
        然后出了个十进制转k进制，也有点儿水，写了之后讲了一下，强调了下0的特判，还有负数的情况。最后闲聊了20分钟就走人了。
        面试期间的问题：
1.        基础知识最基本的得掌握
2.        好好复习之前的project，做的不好的地方考虑下改进方法
3.     今天发现忘记考虑了一个结点多个父结点的invalid input，不知为何也没当场指出来＝ ＝
. From 1point 3acres bbs


补充内容 (2015-10-24 09:02):
表现不好，再补一轮电面。。。


2014(1-3月) 码农类 博士 实习@Googledropbox - 网上海投 - 技术电面 |Other
发面经了！！求RP

都是这周面的，Google的实习面试phd要面三轮。
第一轮： 
1.reverse vowels in sentense。就是说将一句话里面所有的元音倒序, 比如说 fine 要变成 feni
2.float sqrt(x) 的实现，这一题由于不是先前的int sqrt的实现，写的比较久，被面试官指出一些不足
第二轮：
1.给定二维空间一些点，请找出最小的正方形包括所有点。并且将这些点映射到 (0,0) (1,1)的正方形中去: 就是找minx,miny, maxx,maxy并且归一化算坐标就行了
2.给定一个图，然后要求访问所有的节点并返回到最开始的节点。节点之间连线是有权重的，要求找到一个最小cost的path，遍历所有节点并返回。这道题一开始就蒙了，我没选过任何图的课，以为要用到很深的算法，跟面试官说换道题。面试官不让，就说你就写个dfs就可以，结果还是写的bug无数，哎，这轮这里面的不好
第三轮：
1. find longest continous subarray that sum up to zero. 只能想到brute force，面试官提示用sum up to zero的特性，后来想到，从头开始加，如果发现cursum出现过，代表有连续subarray加和等于零
2. find element in 2d matrix: CC150上的原题，就是x--, y++之类的那种

总体感觉第三轮还可以，第一轮马马虎虎，第二轮第二题比较崩溃，当时脑子都不转了，anyway希望攒rp水过. 

接着第二天面了dropbox，是经典原题 loghit gethit，用array做的，拓展问了如果是multithreading怎么办，答用mutex lock gethit 和 loghit，又被问说如果loghit可以share，但gethit不能怎么办，答可以让每个thread maintain自己的数组，然后gethit 把这些sum up起来。

觉得dropbox面的还可以，多谢面经哈。。。





2014(10-12月) 码农类 博士 实习@Google - 内推 - 技术电面 |Pass
1. Leetcode 原题 atoi. 先列test case，再写代码
之后问你如何test。 他期待你回答 unit test. 比如说 java 或者c++里面的 assert 工具. 
然后让我手动run 一个sample 3,000,000,000.
2. input: list of sorted integers
output: list of sorted integers (each value is x^2 in input list)

二面. 
1. 给一个list，要求remove list中的duplicate。 这个用一个hashmap就可以了，不知道她为啥出这个题。
2. 给你一棵树的根， 比如节点A。
   A
   / \
  B*  C
/ \  |
D  E  F

要求删除树中的部分node。比如删除B，结果如下。
    A
  / | \
D  E  C
          |
         F


给你的数据结构如下
Node {
    boolean shouldRemove(); // return true if this node needs to be removed    

}

剩下如何删除，需要什么method，自己讨论和定义。





2014(1-3月) 码农类 博士 实习@Google - 网上海投 - 技术电面 |Pass
去年十月网上海投的，12月收到面试通知，当时正是各种final的时候，就跟HR讲安排到假期之后，上周面试，两轮每轮45min。
我运气很好，问到的题只有一个比较难的。
第一个听口音是中国同胞，迟到10分钟，我以为要放我鸽子的时候，电话响了，因为时间已经迟了，所以上来直接做题。
第一题BTS, 先写了一个recursive，5分钟搞定，然后让我写一个不是recursive的，有犯比较低级的错误，但是自己看到修改过来了。问时间复杂度。
第二题也不难，关于linkedlist，merge sorting之类，实在没记住题目。.
第三题，关于suffix和prefix的题，给一个list，存一些词，然后组合成新词，然后把新词加到list，问longest word。比如 danc nce 可以组合成dance，然后dance存在list里面，dance又可以跟其他词组成新词。问这题的时候没时间了，让我讲讲思路。然后写pseudo code。这个题我花了点时间，但是也写了大概。这题我是后来面完跟我老板讨论，发现有漏洞，就是前缀和后缀一样，可以一直不停地组合，所以可能要判断一下。

第二轮美国人，说得很清楚。第一题找two largest values，我开始写了个bubble sorting，然后写到一半想到一个更好的。然后跟他说我有个更好的，bubble sorting有犯一个小错，他看到指出来了，当时脑子在想新的算法，所以脑子有点乱，loop就写错了。他帮我改过来，然后让我说新的算法，然后写出来。
第二题忘了，似乎也很简单，不然应该记住。
第三题，插入整数，然后计算最近五个数的平均数。然后问了一下如果是web application这个需要注意什么？想想办法提高performance，还有提高存储效率，还扯了一些其他网络的知识。大概就这样愉快地结束了。

过去一周一直为自己在面试中犯了几个低级错误而懊恼，因为听说google要求bug free，觉得这次题挺简单的，要是过不了要等明年了。谁知道一过完春节就收到pass的消息，现在就等着host match，希望一切顺利，希望马上有offer！！！ .1point3acres缃�

背景：自己是第一年的phd，美国读的master，5年工作经验，一直是coding。
面试之前看了CC150，但是没看完，大概60%。Leetcode只做了几题（可忽略不计），挑了几个经典难题训练了一下思维和表达方式。google题目不难，第一是思路，即使你脑子一片空白也好，一点一点想，让人家知道你在思考，孺子可教。。。。第二是沟通，要适当问问题，能帮助你理解的问题。当然，我个人觉得自己运气较好。






这是我第一个面试，目前状态是只做了93道leetcode（就是连一遍都没完成）. 

问题都是属于那种理应在45分钟内做出两道或更多的。但是感觉在第二个电话里回答得很差，尤其是设计题也没有解决面试官提出的需求。
1. 将一个数字的二进制形式以字符串的形式返回

2. 找两个已经排好序了的数组中的中位数（LeetCode原题）

3. 找一个字符串中最长的只含有N种不同的字符的子字符串
. 
4. 设计题：设计一个随机数产生器，有一个以列表形式保存的已经排序blacklist，输出的数字如果出现在其中就要剔除。（面试完之后，听人提醒这题很类似CTCI上的问题12.3）
这题面试官没让我写code，我说了几个答案他都觉得不满意，因为他想要一种“渐进的”方法解决此题，但是我一开始连什么是“渐进的方法”都不懂，还问了他。后来也没有想出来渐进的方法，说的建hash table／bloom filter的方法都需要将整个列表扫描一遍，且没有用到其已经排序了的性质。所提的方法没法处理问题输入，比如说列表非常大的情况。

第二个面试官原本想问三个问题，但是我在第一个和第二个问题上花时间太多了，所以就没问到第三个问题
看其它的面经，有些人回答完问题后还会给出test case，真是很好的方法。我只在code里写了点assertion。
第二个面试官后来提起了《The Internship》，大概是说这部关于Google纪录片有点夸张。看来我有时间有心情也要看（瞻仰）一遍…



2014(1-3月) 码农类 博士 实习@Google - Other - 技术电面 |Other
今天本来两个面试早上临时通知第二个取消了，说面试官没时间，改到下周五。于是就一个。

电话打来比较官方，美国人，开头介绍自己和自己的团队，说了一大通。然后先问了我几个之前做的项目的问题。有个项目很早以前做的了不大有印象，一下没说出来，有点尴尬。然后问你这项目有成品不，我给贴一github链接。他估计没点进去然后突然问我平时用啥version control，然后又问了几个问题，比如你觉得不同的软件有什么不一样，哪些地方可以改进，之类之类。问的问题都挺high level，感觉好像很随意但其实比较难答。当时隐约感觉是不是可以洗洗睡了这方面完全没准备啊，光看算法题去了。

git问完了说好我要你编一下程，我心想好总算来了。结果问的特别简单，大致就是一个数组选次数出现最多的元素。给他写了几种方法。有一种用到hash，他问我为啥hash添加新元素是O(1)，怪我基础不牢没答好，又尴尬了一下。这下觉得铁定可以洗洗睡了。。

完了他也没问其他事，我问了几个问题说哇靠你那组好牛逼就拜拜了。回头一想，整个面试大半时间都花在讨论我项目和verson control上，而且问题好像也是面试官临时看着简历想出来的，怎么跟一般大家的面经完全不一样啊！我看大家都是几道算法题。我这是遇上了非主流面试官还是被水了，还是说正常情况？.



总之感觉略悲剧。现在给第二个面试攒一下人品，保留一点微弱的希望吧。。。

背景是CE PhD第三年，没实习经历。



2014(1-3月) 码农类 博士 实习@Google - 网上海投 - 技术电面 |Other
替友报面经

总共两轮
每轮45分钟

第一个人感觉是个老中，比较nice。

第一题比较简单，考察c++面向对象的实现方法。写一个类，然后写另外一个类继承它。写构造函数析构函数，然后声明一个父类对象的指针，用子类的构造函数构造它。然后问这个对象析构的时候调用的哪个析构函数。就是c++面向对象的各种基础知识。然后问了虚函数和纯虚函数。

第二题
写一个random函数，产生0 ~ n-1的数，有一个black list，产生的数不能在black list里。 

int myRandom(int n, vector<int> bl). 
{
    //.....
}

时间复杂度log(n) .

最后问有什么要问他的。

第二轮
一个老美

第一题：
设计一个类. 
已知有一个函数可以得知给定的某个时刻的数据量。
设计一个类，有两个函数，一个可以求每分钟的平均读入数据量，一个可以求每小时的平均读入数据量。

做这个题目消耗的所有的时间，没做到第二题. 




发面经攒人品啦！
google两轮电面，面试官都根据我的背景聊了下big data。

第一轮相谈甚欢，就问了我一个题目：
给K个排好序的链表，总长度为N，求如何合并成一个排好序的总链表。

我先谈了谈直接设K个指针从每个表头开始扫，每次将k个数中的最小数加入总链表。然后我说这个显然没效率的，O(K*N)复杂度。
然后我说应该可以用分治法搞，两两merge，复杂度为O(logK*N)。

之后他问我虽然分治法快，但是相比第一种方法，有什么缺点。
我犹豫了下，感觉没发现什么缺点，然后想歪了，在想是不是不好并行，不够scalable？但是想了下感觉应该不是，然后就随口用疑问的口吻丢出一句“space？”。美国人真nice，直接兴奋的告诉我对啦！就是space，然后一串bulabula...


他之后说让我选一个方法实现。我觉得要实现肯定得实现更有效的啦。
我写了一段代码，他没发现bug，我还发现了一个小bug补上了，原来是忘记考虑输入为null的情况了。他说这个无所谓，我汗，感觉还没我严谨。

之后问我，那你有没有什么方法减小空间的开销。
我觉得这个很简单，直接问输入可以修改不？他表示ok。我就说，那我merge两个链表的时候直接修改两个链表结构，做成in place merge不就行了么，无需额外空间开销。他觉得这个方法可以，不过见我代码是java写的，表示in place merge在java中可不好实现哦，然后又bulabula一串，重点是虽然不好实现，但是仍然可以实现。我看他说得那么兴奋，瀑布汗啊。。。我本身就觉得这个问题分治法开销本来就不大，要是我用c++或者按照LeetCode的ListNode定义，我本来就打算做成in place merge的，只不过他给我定义好接口了，用java API写就没写成in place的。这也是在他问我缺点的时候我疑惑的原因。


第二面听声音是个年纪比较大的人，一开始还跟我讨论校园文化，说他女儿对我校的鼓号队感兴趣，汗哪。。。. 

第一个问题是个经典问题，问给你millions of documents，如何sort 这些string。之前还问我map reduce里sorting是怎么实现的。
我就说数据这么大，用外排序呗，分成一个block一个block的排序，然后in place合并。他问了又些细节，我虽然见过这个问题，但是没有想得那么深入，感觉他对有些细节问题的回答不太满意。. 

他还问了一个问题，说如果输出的数据也要分块的话，你是如何进行分块操作的。我当时随口一说，可以对每个string加一个data field叫size，做成类似于prefix sum的东西，不过这样肯定不够高效。
他说嗯，这个可以吧，没让我多想。不过事后想了下，发现这个问题太简单了，之前自己还在project中实现过对文本文件的partitioin。就是先等长划分，然后再调整划分点的位置即可，通过寻找类似于'\0'这样的字符就可以了。后悔死了，不过也怪他没给我时间多想，直接转到下个问题了。

第二个问题让我打印出质数。
我问打印多少或者到哪个数为止，他说不停打印就是了，感觉就是一股老子就是要让cpu飞转的气势。。。. 
这种数学类问题我完全没有准备，没什么思路，就先从没效率的方法开始说，对于每个数i，检查前面从2到i-1是否存在一个数能够把它除尽。
后来想想，说与其存储之前所有从2到i-1的数，还不如存这些数最后分解的因子，毕竟之前遇到的因子肯定比之前遇到的数要少得多。
我再想了想，实在想不出什么好方法，就补充道应该可以有数学方法，给出什么复杂的数学公式搞定吧，不过我是学cs的，实在不知道额。他表示同意，说是有数学方法可以解决，不过他自己也看不懂，不要紧。
这样我就放心了，然后他说那你就coding吧。

我的coding虽然没什么大的bug，但是代码有些多余的分析，他看了疑惑，觉得不够精简，因为我一开始对每个合数都不停的让之前的因子去除它，直到它不能再被除尽位置。如果剩下的值不为1，就把剩下的值作为新的因子，加入到所遇到的因子列表中。后来发现我忽略了一个重要的问题，每个所遇到的因子，必定为之前遇到过的质数，所以这里的一个不断做除法的循环是完全没必要的。我之后精简了code，他觉得好多了。不过我觉得我的表现他应该不是特别满意吧，毕竟一开始代码不简洁也不高效。

之后他问我如果一直这样循环下去，会有什么后果。我就说cpu一直飞速运行，直到内存溢出，因为内存是不可能存储下所有因子的。

他接着问有没有什么方法让循环持续时间更长，找到更多的质数。
我说那就把这些因子分块写到硬盘上，然后每次遍历所有因子的时候按一个block一个block的来。
他说能不能写下code，我就纳闷，不就加一个for循环么。我直接加了个for each语句。
他看了下，说不高效，这样每次检查一个数是不是质数，都会遍历所有的block，disk io开销太大。
我没听懂意思，以为说我写for each的时候需要预先载入所有的block，我连忙说不是的，这些block是链表形式链接的，把for each语句改成了链表形式的遍历。
他还是不满意，毕竟我没抓住重点。他说你应该把函数接口变下，输入的数据不应该是一个数，而是一个block的数。
我恍然大悟，然后连忙接过话，说这个学过，本质就是编译器课里对嵌套循环的优化嘛，把多层循环分块，提高data locality。然后解释说我以为他是让我在降低time complexity上再下功夫，没想到是让我注重算法复杂度里常数因子的开销啊。他虽然表示同意，但是感觉这个人也许是年纪大的关系，没第一个人活泼，语气很低沉，给我感觉我的表现有些糟糕。

个人感觉第一面挺顺利的，第二面表现有些不佳。看造化吧，发个面经求bless~





2016(10-12月) 码农类 博士 实习@Google - 内推 - 技术电面 |Otherfresh grad应届毕业生
第二轮的中国人非常好，我不懂区间线段函数还给我画了一下，十分感谢他。第一个印度人没怎么让我写代码让我觉得很不靠谱，不会最后说我什么都不会吧（因为没有留下来文字）

第一轮印度人
Q1: 给很多string，去重 然后输出，例如["A", "AB", "A", "C"] 输出 ["A", "AB", "C"] （遵循在input里面的顺序）， unordered_set实现（代码写了）
followup： 如何减少内存使用： 如果不需要按照input顺序，则输出unordered_set (没写代码)
followup：unordered_set 如何实现的（讨论了hash，以及碰撞之后怎么存） （没写代码）
followup：如何减少用来去重的unordered_set的内存使用，如果可以允许不怎么准确，那么就存储hashcode （没写代码）. 

Q2: 给很多国家和人口，按照人口比例sample，random(0, populationSum) 然后看在那个interval里面 （只写了一点代码主要在说，没有完整的代码）
followup： 如果是userid和一个value，然后按照value来算，如果这些pair很多，怎么办。 构造类似interval tree或者B树的结构来查询生成的random number在那个区间里 （没写代码）. 鐣欏鐢宠璁哄潧-涓€浜╀笁鍒嗗湴
followup：让我说上面的操作是什么行为，最后说的是search。。。 （不是很清楚为什么问这个）

Q3: 问如果一个程序内存用的超多超快怎么回事， memory leak （这题所有的都没写代码）。
followup： 问有没有做过这种调试，讲了一个V8引擎处理js的闭包导致内存溢出的故事 （就是V8实现引用计数有问题）
followup： 现代语言有没有什么方法来阻止memory leak， 说了C++的smart pointer
followup： smart pointer是怎么实现的， 用了引用计数，引用计数怎么实现，重载＝号增加计数，析构函数减计数并处理释放内存 （这个完全是自己想的，他说这是一种实现方法，所以也不清楚是不是真的对）

第二轮中国人
Q1: 给两个字符串一模一样的，第二个字符串加了一个新字符然后打乱顺序，问新加的是什么。先写了hashmap的，然后在提醒下写了第二个串的和减去第一个串的和就是新字符
Q2: 给一个数组，找到所有的index k，满足 sum[0:k-1] = sum[k+1 : n]，最初写的是要遍历三遍，最后改成了遍历两遍只用三个integer存储数据。
Q3: 实现一个类来表示一个由很多区间线段函数组成的函数，实现了一个最基本的区间线段类，然后有另外一个类有一个列表存着这些区间线段函数。函数成员写了inert，delete，draw但是都只写了签名没有实现，对方是不是想考区间线段树啊？（刚才搜到的）




首先感谢@whuwangyi 提供G家内推。. 

Google 电面第一轮： 听口音是个白人小哥，在Google干了一年半了. 


1. 写一个class, 给定一个window 的size, 然后提供可以求这个window里面的average的接口。用queue搞定
2. 给定一个GraphNode, 求其distance < k以内的GraphNode, bfs搞定，不过写的过程一紧张中出了不少bug, 最后跟小哥讨论的时候把bug给fix了.
.

第二轮： 感谢国人大哥放水，虽然听声音似乎面试官很累。。。


一开始先问了下简历，对什么方向有兴趣，答：CV, ML 还有 infrastructure...然后被他吐槽这些方向差好远。。恰好他是在infrastructure组的，所以特地问了下我的一个database的项目。

1. Add One.....
2. Multiply strings.....


上上周的B家电面：
Bloomberg:  听口音应该也是个白人小哥


1. reverse an array, the last element is NULL, 一开始我用个pointer，读到最后然后倒序输出。。后来说了几下，估计他是想我用recursion来写。。。
2. Validate binary search tree.


然后再问了几个关于bloomberg的问题。。。。


发面经攒人品，也希望各位offer多多 



Google 面经 1个半小时pass一面：
白人大哥：类似leetcode missing range 已知数是0-99第一个sorted array[0,3,5,6,8,60]  返回的就是一个string“1-2, 4, 7, 9-59, 61-99".
二面：
国人大哥：给一堆字符和2进制码的对应，再给一个二进制的string, 返回所有可能的decode结果。Follow up只返回valid english words




Google 面完onsit挺久了。现在才来写。 因为接到通知，要继续面。简单的题我真心不记得了
记得的分享一下
1. 给一个N*N grid， 上面有一些格子里面标了1. 问总共多少方块了有1. 所以方块包括只含1的那个， 还有任何含1的那个 所以2*2, 3*3。 当时，被问懵了，而且是那一轮的第二小题，所以没时间了。后来面试官一直说
don't forget you have a computer blah blah, 越给我hint我越panic不知道怎么做。
2. 给你一堆灯泡。可以flip 一个范围开着变关， 关变开， 然后问这么干了k次以后， 随便问你一个灯泡是开着开始关着，怎么做。我还是很弱地没写完。 但是有很多idea。主要想就是interval， merge interval 之类
求大家指点这两个题该怎么做最好。 而且，想问大家每次runtime问了都怎么回答的啊。 我每次都想当然，很容易答错。 求大家多多指教！

1.
先维护r[x][y]表示(x,y)右边第一个1的y坐标，d[x][y]表示(x,y)下面第一个1的坐标，递推r[x][y]<-r[x][y + 1], d[x][y]<-d[x + 1][y]
然后可以算f[x][y]->(左上角为(x,y)的方块，最大不包含1的边长是多少)，有了f 最后答案就很好算了，f[x][y]可由f[x + 1][y + 1],r[x][y],d[x][y] O(1)算. 
O(n^2)

2.
假设询问有q个，灯泡有n个
对于一次flip(l,r)，在l和r+1两点取反，即flag[l] = flag[l] xor 1, flag[r + 1] = flag[r + 1] xor 1，灯泡i 最后的状态就是把j<=i的flag[j]xor起来
如果全部flip完后才询问，可以直接按上述方法做完后算好每个灯的状态直接保存下来，询问直接输出
O(n+k+q). 
如果一边flip一边有询问，那么可用Binary Index Tree将flip和query都做成O(logn)，或者直接用Segment Tree或BST等数据结构维护区间修改
O(n+(k+q)logn)

把做法吃透了runtime自然而然就知道了





两轮紧靠着的电面，都是直接上来就问问题，简历一句话都没问，现在招实习都那么直接吗

第一轮是中国小哥，问题是 给定一个9位的键盘，

1 2 3
4 5 6
7 8 9
只有中间没有其他键的两个键才能相连，比如1可以连 2 4 5 6 8 但不能连 3 7 9
但是如果中间键被使用了，那就可以连，比如5已经被使用了，那1就可以连9.
每个键只能用一次，给定一个长度L，求问有多少unique path with length L.

中国小哥人很好，循循善诱，见我卡住了就说先写brute force吧，然后再提示说用回溯法

第二轮听口音应该是美国人
1. 给定一个函数 boolean isWord(string s)，可以判断这个字符串是否是一个合法的英语词汇
然后给一个初始的字符串s，只能对它做删除字母的操作，求问最长的合法的英语词汇

2. 输入一个数组，输出和【0,99】之间的gap，leetcode原题

3. 输入一个二进制int， 两个digit之间交换位置
比如 01010011 交换之后就变成 10100011 
0和1交换 0和1交换 0和0交换 1和1交换

总体并不是很难，只是我太菜， 当为接下来其他面试攒经验和rp吧~


session 1:
1.给一只排好序的数组，数字是从0到99的，打印没有的数字。。。。。。。这道题一定是另有深意吧。。。。。。。。。
eg [4,5,7,10]  
output 0-3, 6, 8-9, 11-99. more info on 1point3acres.com

2.一个车站大家来上车验票，15分钟内不能连续刷两次票，判断这个人刷的时候能不能通过。。。。。
eg A 10am刷一次， A 10:15am之后刷才返回true。。 给的是人名和时间，而且假设人名不重复。。。
follow up: 空间不足的话. 

session 2:
1. 给个矩阵，顺时针打印
1 2    3   4
5 6    7   8
9 10 11 12
output: 1,2,3,4,8,12,11,10,9,5,6,7,8

2.给一个数组，都是整数，返回出现次数大于一半的
这个题不停的follow up... 空间不够啊，降复杂度啊，不能sort的话啊。。。.

session 3:
这次就一个题。。。估计是我太水了没写出来只说了思路。。。感觉现在让我写还是写不出来=。= （大神说不定直接一句LC原题。。。麻烦说一下什么题谢谢。。表示根本没刷题。。）
给一个数字，是bits的个数n，返回多少个good的情况，总情况是2的n次方大家都知道，那么bad的情况是什么呢。。。. 
就是‘00’出现的次数大于等于两次就是bad，注意‘000’也是bad因为前两个0一次，后两个0一次，也是出现了两次

Google对女生的要求一定是低到一定程度了，广大妹子们放心申请吧。。男生的竞争实在是太激烈了。。我觉得我在拉仇恨。。。恩就这样吧。。。跪求team match成功买车啊！！！


补充内容 (2015-2-4 08:28):
矩阵那个写错了，最后没有那个8.。。。


2015(10-12月) 码农类 硕士 全职@Facebook - 内推 - 技术电面 |Other其他
一小时前刚刚面完， 刚开始到了时间点没有动静， 就一直关注对方的skype账号（一个招聘专用），过了一小会变绿了，但是还是没有打过来，猜想是不是一时间搞不清楚我的skype账号名，是不是需要我发个消息过去。 犹豫了一阵还是觉得先等几分钟再说，最后忍不住要发消息的时候，发现skype提示对方正在输入，就暂停下来。 果然是来了，问是不是XXX，我说对我已经准备好了。 然后开始建立通话并发来一个coderpad的链接， 但不知道为什么我总是打不开（一点击总是得到一个首页，而不是一个pad），后来干脆我建了一个邀请他，这次终于成了。

应该是一个美国小哥（非三哥）， 先说了抱歉搞错了我的skype用户名，说面试时间可以顺延（赞一个）。  简单介绍了一下他自己，然后问我现在的项目，我说刚来公司正做第一个支付相关项目没啥太多的可说的，他说明白，然后就开始coding。. 

三个原题（窃喜）
1.  subsets
2.  max subarray sum
3. lowest common ancestor (binary tree, not bst)

最后闲聊两句88了， 希望顺利进入next step （不知道是不是一定要两次电面，就这次本身来说是很顺利的）
最后， 求大米！！：）-google 1poi




n年没有面试过，第一次面试很紧张。

问了 个 GetNBytes, can call multi times, leetcode 原题。 这题我知道思路，但是写的乱七八糟，最后没写完。.

让后问了个刚release了一个新feature 发现1% customer的data 会直接被format掉，怎么troubleshoot。

还让举个mentor 新员工的例子。. visit 1point3acres.com for more.

估计挂了，不过本来也不想去。教训是题一定要好好刷，有思路不一定在短时间能写出来。




 2015年10月22日 google MTV onsite
 
共计5轮， 没有老印， 没有老中， 4个老美， 2个像是南美人， 最后一轮是2个人0
没有design, 没有tech communication, 顺便说下， 感觉google的45分钟，好紧张呀， 可能还是我弱的厉害

1. 实现一个动态数组， 可以自动扩容那种， 用了loadfactor. 

2. 画了一个图， 两端是A和B， A，B之间有若干个stop points, 一个人要从A走到B， 中间可以任意停在stop点上，
a. 这些点的间隔不一样， 例如（想象个一维坐标， e.g. A: 0, B, 1000), 我们有 stop 点 50,60，85， 100.。。。。
b. 50 penalty, 假如从一点到另外一点的距离是50， penalty为0， 否则penalty=Math.abs(50-distance);  
找出来从A走到B最小的penalty. 
e.g. input{0, 50, 60, 85, 100} where 0 is A, 100 is B, 
so penalties are:
(0-50:0), (50-100:0) total=0
(0-50, (50-60:10), (60-100:10) total=20 
....6 f' M2 X' e& f- o, a
(0-85:35), (85-100:15) total=50. 

So (0-50-100) is what we want, 只用返回最小值， 不用求序列， 可以用dp O(n^2) 解决。 

3. 给你一个整数数组{2,3,5}， 一个target 33, 求出所有能用数组中数组成的<=target的数
例如： 
2,3,5
22,23,25
32，33 
8 
subset的变种， 在23,32的时候纠结了一会。 

4. 给你一个无向图edge list, 求里面的三角形， 南美人不友好， 不给hint, 就自己在那边干活， 而且最后我就做出来个暴力解， 他没留意， 还讲了半天才明白， 我了个去。 
a. 
0-1, 
1-2
3-2
4-3
1-0& 
自己想如何设计数据结构来表示input. 

b. 求里面的三角形
我会求cycle, 但是三角形， 没想到太好的解法， 说完题目都过了20分钟了， 因为之前还扯了别的， 最后给了个最暴力的解法
i. 对于每个node, 找出他们的邻居) E) j; 
ii. 看邻居之间有没有相连， 有则找到， 没有继续; 

5. 给你一个循环链表， 4-7-3-5-2-4, 一个大圈的那种链表， 代表一个roadmap, 
a. 每个节点的整数是在该节点能够加的油。 
b. 然后告诉你从一个节点到另一个节点的边上是有cost的， 既要花费的油，当当前攒的油+当前节点加的油-到下一个节点cost<0就代表不能走了 
问， 给你任意一个环上的node, 让你返回一个set<node> 包含哪些可以走一圈的节点， 
有点象是gas station+linkedlist的应用。 

弱呀， 每轮都只做了一个题。。。去年面google的时候还是9个算法+1个设计。。。。。。。， 老了

积极发面经， 攒人品， 希望下面onsite能拿到offer, 现在都成了onsite就死了， 真。。。。