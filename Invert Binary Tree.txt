/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        
        if(root == NULL){
            return root;
        }else{
            
            if(root->left == NULL && root->right == NULL){
                return root;
            }else if(root->left != NULL && root->right == NULL){
                TreeNode* temp ;
                temp = root->right;
                
                root ->right = root->left;
                root-> left = temp;
                
                
                invertTree(root->right);
                
                
                return root;
            }
            
            else if(root->right != NULL && root-> left == NULL ){
                TreeNode * temp;
                temp = root-> left;
                
                root-> left = root->right;
                root-> right = temp;
                
                invertTree(root->left);
                
                return root;
            }
            
            else if(root->right != NULL && root ->left != NULL){
                TreeNode *temp;
                temp = root->right;
                
                root->right = root->left;
                root->left = temp;
                
                
                invertTree(root->right);
                invertTree(root->left);
                
                return root;
                
            }
            
            
        }
        
        
        
    }
};