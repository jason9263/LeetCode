public class Solution {
    public int res = 0;
    public int countArrangement(int N) {
        
        Set<Integer> visited = new HashSet<Integer>();
        
        if(N == 1){
            return 1;
        }
        
        if(N == 2){
            return 2;
        }
        
        helper(visited,0,N);
        
        return res;
    }
    
    public void helper( Set<Integer> visited,int depth,int N ){
        if(depth == N){
            res++;
            return;
        }else{
            for(int i = 1; i <= N; i++){
                if(!visited.contains(i) && (i%(depth+1) == 0 || (depth+1) % i == 0 )){
                    visited.add(i);
                    helper(visited,depth+1,N);
                    visited.remove(i);
                }
            }
            
        }
    }
    
    
}