class Solution {
    public int countComponents(int n, int[][] edges) {
        int[] roots = new int[n];
        
        for(int i = 0; i < n; i++){
            roots[i] = i;
            
        }
        
        for(int[] e :  edges){
            int root1 = find(roots,e[0]);
            int root2 = find(roots, e[1]);
            
            if(root1 != root2){
                roots[root1] = root2;
                n--;
            }
        }
        
        return n;
    }
    
    public int find(int[] roots, int id){
        while(roots[id] != id){
            roots[id] = roots[roots[id]];
            id = roots[id];
        }
        
        return id;
    }
}


class Solution {
    public int countComponents(int n, int[][] edges) {
       int[] roots = new int[n];
        for(int i = 0; i < n ; i++){
            roots[i] = i;
        }
        
        for(int[] edge : edges){
            int root1 = findroot(roots, edge[0]);
            int root2 = findroot(roots, edge[1]);
            
            if(root1 != root2){
                roots[root1] = root2;
                n--;
            }
        }
        
        return n;
        
    }
    
    public int findroot(int[] roots, int tmp){
        while(roots[tmp] != tmp){
            roots[tmp] = roots[roots[tmp]];
            tmp = roots[tmp];
        }
        
        return tmp;
    }
    
    
}