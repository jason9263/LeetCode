class Solution {
    public int numSquares(int n) {
        int[] dp = new int[n+1];
        Arrays.fill(dp, Integer.MAX_VALUE);
        
        dp[0] = 0;
        
        for(int i = 0; i <=n ; i++ ){
            for(int j = 1; i + j*j <= n; j++){
                dp[i+ j*j]  = Math.min(dp[i]+1, dp[i + j*j]);
            }    
        }
        
        return dp[n];
        
    }
}


class Solution {
    public int numSquares(int n) {
        
        while(n % 4 == 0){
            n /= 4;
        }
        
        int[] dp = new int[n+1];
        Arrays.fill(dp, Integer.MAX_VALUE);
        
        dp[0] = 0;
        
        for(int i = 0; i <=n ; i++ ){
            
            if(i % 8 == 7){
                dp[i] = 4;
                continue;
            }
            
            for(int j = 1; i + j*j <= n; j++){
                dp[i+ j*j]  = Math.min(dp[i]+1, dp[i + j*j]);
            }
            
        }
        
        return dp[n];
        
    }
}