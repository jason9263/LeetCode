/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head == null || head.next == null){
            return true;
        }
        
        ListNode fast = head;
        ListNode slow = head;
        
        while(fast != null && fast.next != null){
            fast = fast.next.next;
            slow = slow.next;
        }
        
        if(fast != null){
            slow = slow.next;
        }
        
        slow = reverse(slow);
        fast = head;
        
        while(slow != null){
            if(slow.val != fast.val){
                
                System.out.println(slow.val + "    " + fast.val);
                
                return false;
            }
            
            slow = slow.next;
            fast = fast.next;
        }
        
        return true;
        
    }
    
    public ListNode reverse(ListNode node){
       
        ListNode pre = null;
        ListNode cur = node;
        
        while(cur != null){
            ListNode next = cur.next;
            
            cur.next = pre;
            
            pre = cur;
            cur = next;     
        }
        
        return pre;
    }
    
}