public class Solution {
    public int maximalRectangle(char[][] matrix) {
        if(matrix == null|| matrix.length == 0 || matrix[0].length == 0){
            return 0;
        }
        
        int clen = matrix[0].length;
        int rlen = matrix.length;
        
        int[] h = new int[clen+1];
        h[clen] = 0;
        int  max = 0;
        
        
        for(int row = 0; row < rlen; row++){
            Stack<Integer> s = new Stack<Integer>();
            
            for(int i = 0; i < clen + 1; i++){
                if(i < clen){
                    if(matrix[row][i] == '1'){
                        h[i] += 1;
                    }else{
                        h[i] = 0;
                    }
                }
                
                
                if(s.isEmpty() || h[s.peek()] <= h[i]){
                    s.push(i);
                }else{
                    
                    while(!s.isEmpty() && h[i] < h[s.peek()]){
                        
                        int top = s.pop();
                        int area = h[top]*(s.isEmpty()? i : (i - s.peek() -1));
                        
                        if(area > max){
                            max = area;
                        }
                        
                        
                    }
                    
                    s.push(i);
  
                }

            }

        }
        
        return max;
    }
}