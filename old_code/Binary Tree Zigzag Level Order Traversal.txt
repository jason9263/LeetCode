/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
                List<List<Integer>> res = new ArrayList<List<Integer>>();
        
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        
        if(root == null){
            return res;
        }
        
        q.add(root);
        int cnt = 1;
        int nextcnt = 0;
        List<Integer> tmplist = new ArrayList<Integer>();
        
        while(!q.isEmpty()){
        
            nextcnt = 0;
            tmplist = new ArrayList<Integer>();
            
            while(cnt > 0){
                
                TreeNode tmp = q.remove();
                cnt--;
                tmplist.add(tmp.val);
                
            if(tmp.left != null){
                q.offer(tmp.left);
                nextcnt++;
            }
            
            if(tmp.right != null){
                q.offer(tmp.right);
                nextcnt++;
            }    
                
                if(cnt == 0){
                    cnt = nextcnt;
                    break;
                }
                
            }
            
            res.add(tmplist);   
        }
        
        for(int i = 1; i < res.size() ; i = i + 2){
            Collections.reverse(res.get(i));
        }

        return res;
    }
}