/**
 * Definition for singly-linked list with a random pointer.
 * class RandomListNode {
 *     int label;
 *     RandomListNode next, random;
 *     RandomListNode(int x) { this.label = x; }
 * };
 */
public class Solution {
    public RandomListNode copyRandomList(RandomListNode head) {
        RandomListNode h = head;
     
        
        if(head == null){
            return head;
        }
        
        Map<RandomListNode, RandomListNode> jm = new HashMap<RandomListNode, RandomListNode>();
        
        
        while(h != null){
            jm.put(h, new RandomListNode(h.label));
            h = h.next;
        }
        
        RandomListNode tmph = head;
        
        while(tmph != null){
            
            jm.get(tmph).next = jm.get(tmph.next);
            jm.get(tmph).random = jm.get(tmph.random);
            tmph = tmph.next;
            
        }
        
        
        return jm.get(head);
        
        
    }
}