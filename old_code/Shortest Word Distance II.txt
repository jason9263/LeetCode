public class WordDistance {

    public WordDistance(String[] words) {
        
        jmap = new HashMap<String, List<Integer>>();
        
        if(words == null || words.length == 0){
            return;
        }
        
        
        for(int i = 0; i < words.length; i++){
            
            if(jmap.containsKey(words[i])){
                
                jmap.get(words[i]).add(i);
                
            }else{
                
                List<Integer> jlist = new LinkedList<Integer>();
                jlist.add(i);
                
                jmap.put(words[i], jlist);
                
            }
        }
        
        
        
    }
    
    public int shortest(String word1, String word2) {
        List<Integer> list1 = jmap.get(word1);
        List<Integer> list2 = jmap.get(word2);
        
        int res = Integer.MAX_VALUE;
        
        for(int i = 0; i < list1.size(); i++){
            for(int j = 0; j < list2.size();j++){
                res = Math.min(res, Math.abs(list1.get(i)  - list2.get(j)));
            }
        }
        

        return res;
        
    }
    
    
    private HashMap<String , List<Integer>> jmap;
}

/**
 * Your WordDistance object will be instantiated and called as such:
 * WordDistance obj = new WordDistance(words);
 * int param_1 = obj.shortest(word1,word2);
 */