class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        
        if(matrix == null || matrix.length == 0){
            return false;
        }
        
        
        int i = 0;
        int j = matrix[0].length -1;
        
        while(i < matrix.length && j >= 0){
            int tmp = matrix[i][j] ;
            
            if(tmp == target){
                return true;
            }else if(tmp > target){
                j--;
            }else if(tmp < target){
                i++;
            }
        }
        
        return false;
    }
}


class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        //binary search 
        if(matrix == null || matrix.length == 0){
            return false;
        }
        
        int m = matrix.length;
        int n = matrix[0].length;
        
        int lo = 0;
        int hi = m*n-1; 
        
        while(lo <= hi){
            int mid = lo + (hi - lo)/2;
            int tmp = matrix[mid/n][mid%n];
            
            if(tmp == target){
                return true;
            }else if(tmp > target){
                hi = mid -1;
            }else if(tmp < target){
                lo = mid + 1;
            }
            
        }
        
        return false;
    }
}