/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
class Solution {
public:

    static bool cmp (Interval &left, Interval &right){
        
        return (left.start < right.start);
        
    }
    vector<Interval> merge(vector<Interval>& intervals) {
        
        vector<Interval> result;
        
        sort(intervals.begin(), intervals.end(), cmp);
        
        int len = intervals.size();
        
        if(len == 0 ||len == 1){
            return intervals;
        }
        
        result.push_back(intervals[0]);
        
        for(int i = 1; i < len; i++){
            if(result.back().end < intervals[i].start){
                result.push_back(intervals[i]);
            }else{
                
                result.back().end = max(result.back().end, intervals[i].end);
                
            }
        }
        
        return result;

    }
};