class Solution {
    public List<List<Integer>> findSubsequences(int[] nums) {
        
        Set<List<Integer>> res = new HashSet<List<Integer>>();
        
        List<Integer> out = new ArrayList<Integer>();
        
        helper(res, out, nums,0);
        
        List result = new ArrayList(res);
        
        return result;
    }
    
    public static void helper(Set<List<Integer>> res, List<Integer> out , int[] nums, int start){
        
        if(out.size() >= 2){
            res.add(new ArrayList<Integer>(out));    
        }
        
        for(int i = start; i < nums.length; i++){
            
            if(out.size() == 0 || out.get(out.size()-1) <= nums[i]){
                out.add(nums[i]);
                
                helper(res, out, nums, i+1);
                
                out.remove(out.size()-1);
            }  
        }
    }
 
}