/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    
    public void connect(TreeLinkNode root) {
        
        Queue<TreeLinkNode> jq = new LinkedList<TreeLinkNode>();
        if(root == null || root.left== null&& root.right == null ){
            return;
        }
        
        jq.offer(root);
        
        int cnt = 1;
        int newcnt = 0;
        
        while(jq.size() > 0){

        while(cnt > 0){
            
            TreeLinkNode tmp =jq.poll();
            
            cnt --;

            if(tmp.left != null){
                jq.offer(tmp.left);
                newcnt++;
            }
            
            if(tmp.right != null){
                jq.offer(tmp.right);
                newcnt++;
            }
            
            if(cnt > 0){
                tmp.next = jq.peek();
            }else{
                tmp.next = null;
               
            }
            
        }
        
         cnt = newcnt;
         newcnt = 0;

        }
        
       
    }
}