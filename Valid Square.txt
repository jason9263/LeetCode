public class Solution {
    public boolean validSquare(int[] p1, int[] p2, int[] p3, int[] p4) {
        
        double tmp1 = dist(p1,p2);
        double tmp2 = dist(p1,p3);
        double tmp3 = dist(p1,p4);
        
        if(dist(p1,p2) != dist(p3,p4)){
            return false;
        }
        
        if(dist(p1,p3) != dist(p2,p4)){
            return false;
        }
        
        if(dist(p1,p4) != dist(p2,p3)){
            return false;
        }
        
        double max = Math.max(Math.max(tmp1, tmp2),tmp3);
        double min = Math.min(Math.min(tmp1,tmp2),tmp3);
        
        if(max == 0 || min == 0){
            return false;
        }
        
        
        return max == 2* min ? true:false;
    }
    

    
    
    public double dist(int[] p1, int[] p2){
        double tmp = (p1[0] - p2[0]) *(p1[0] - p2[0]) + (p1[1] - p2[1])*(p1[1] - p2[1]);
        return tmp;
    }
}