public class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<Integer> out = new ArrayList<Integer>();
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        
        
        Arrays.sort(candidates);
        helper(candidates, target,  0 , out, res);
        
        return res;
    }
    
    
    public void helper(int[] nums, int target,  int start, List<Integer> out, List<List<Integer>> res){
        
        if(target < 0){
            return; 
        }else if(target == 0){
            res.add(new ArrayList<Integer>(out));
            return;
        }else {
            
            for(int i = start; i < nums.length; i++){
                
                if(i > start && nums[i] == nums[i-1]){
                    continue;
                }
                
                out.add(nums[i]);
                helper(nums, target - nums[i], i+1, out, res );
                out.remove(out.size()-1);
            }
            
            
        }
        
    }
    
    
    
}