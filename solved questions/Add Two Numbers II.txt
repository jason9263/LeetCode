/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int sum = 0;
        int exr = 0;
        
        ListNode head = null;
        ListNode pre = null;
        
        Stack<Integer> s1 = new Stack<Integer>();
        Stack<Integer> s2 = new Stack<Integer>();

        while(l1 != null){
            s1.push(l1.val);
            l1 = l1.next;
        }
        
        while(l2 != null){
            s2.push(l2.val);
            l2 = l2.next;
          
        }
        
        while(!s1.isEmpty() || !s2.isEmpty()){
          
            sum = 0;
            if(!s1.isEmpty()){
                sum += s1.pop();
                
            }
            
            if(!s2.isEmpty()){
                sum += s2.pop();
                
            }
            sum += exr;
            
            ListNode res  = new ListNode(sum%10);
            exr = sum/10;
            
            res.next = pre;
            pre = res;
            
            head = res;
        }
        
        if(exr > 0){
            ListNode res = new ListNode(exr);
            res.next = pre;
            head = res;
        }else{
            
        }
        
        return head;

        
    }
}