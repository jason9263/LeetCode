public class Solution {
    public int[] nextGreaterElement(int[] findNums, int[] nums) {
        HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
        
        int[] res = new int[findNums.length];
        
        Stack<Integer> stack = new Stack<Integer>();
        
        for(int tmp : nums){
            while(!stack.isEmpty() && stack.peek() < tmp){
                map.put(stack.peek(),tmp);
                stack.pop();
            }
            
            stack.push(tmp);
        }
        
        for(int i = 0; i < findNums.length; i++){
            res[i] = map.getOrDefault(findNums[i],-1);
        }
        
        
        return res;
    }
}


class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        Map<Integer,Integer> map = new HashMap<Integer, Integer>();
        Stack<Integer> stack = new Stack<Integer>();
        
        for(int tmp : nums2){
            while(!stack.isEmpty() && stack.peek() < tmp){
                map.put(stack.pop(), tmp);
            }
            
            stack.push(tmp);
        }
        
        int[] res = new int[nums1.length];
        
        for(int i = 0; i < nums1.length; i++){
            
            res[i] = map.getOrDefault(nums1[i],-1);
            
        }
        
        return res;
        
    }
}