public class Solution {
    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {
        
        
        long tmpk = k;
        long tmpt = t;
        
        
        if(nums == null || nums.length == 0 || k <= 0){
            return false;
        }
        
        long[] tmpnums = new long[nums.length];
        for(int i = 0; i < nums.length; i++){
            tmpnums[i] = nums[i];
        }
        
        
        final TreeSet<Long> values = new TreeSet<>();
        
        for(int ind = 0; ind < nums.length; ind++){
            final Long floor = values.floor(tmpnums[ind] + t);
            final Long ceil = values.ceiling(tmpnums[ind] - t);
            
            if((floor != null && floor >= tmpnums[ind]) || (ceil != null && ceil <= tmpnums[ind])){
        return true;        
            }
            
            values.add(tmpnums[ind]);
            if(ind >= k){
                values.remove(tmpnums[ind - k]);
            }
        }
     return false;   
    }
}