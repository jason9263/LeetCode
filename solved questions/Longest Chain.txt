import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

/**
 * Created by Administrator on 2016/12/6.
 */
public class LongChain {

    public static void main(String[] args){

    }

    public static int longestChain(String[] words){

        Set<String> set = new HashSet<String>();
        Map<String,Integer> map = new HashMap<String,Integer>();

        for(String word: words){
            set.add(word);
        }

        int longest = 0;

        for (String word:words){

            if (word.length() > longest){
                int length = helper(word,set,map) + 1;
                longest = Math.max(length,longest);
            }
        }

        return longest;
    }
    public static int helper(String word, Set<String> set, Map<String,Integer> map){
        int result = 0;

        for(int i = 0; i < word.length(); i++){
            String nextword = word.substring(0,i) + word.substring(i+1);

            if (!set.contains(nextword)){
                continue;
            }

            if(map.containsKey(nextword)){
                result = Math.max(result,map.get(nextword));
            }else{
                result = Math.max(result,helper(nextword,set,map)+1);
            }

        }
        map.put(word,result+1);
        return result;

    }

}
