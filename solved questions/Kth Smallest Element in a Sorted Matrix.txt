public class Solution {
    public int kthSmallest(int[][] matrix, int k) {
        PriorityQueue<Tuple> jqueue = new PriorityQueue<Tuple>();
        int n = matrix.length;
        
        for(int i = 0; i < n; i++){
            jqueue.offer(new Tuple(0,i,matrix[0][i]));
        }
        
        for(int i = 0; i < k-1; i++){
            
            Tuple tmp = jqueue.poll();
            if(tmp.x == n-1){
                continue;
            }
            
            jqueue.offer(new Tuple(tmp.x+1, tmp.y, matrix[tmp.x+1][tmp.y]));
        }
        
        return jqueue.poll().val;
        
    }

}


class Tuple implements Comparable<Tuple>{
    int x = 0;;
    int y = 0;
    int val = 0;
    
    public Tuple(int x, int y ,int val){
        this.x = x;
        this.y = y;
        this.val = val;
    }
    
    
    public int compareTo(Tuple that){
        return this.val - that.val;
    }
}