public class Solution {
    public int rob(int[] nums) {
        if(nums == null || nums.length == 0){
            return 0;
        }
        
        if(nums.length == 1){
            return nums[0];
        }
        
        
        if(nums.length == 2){
            return Math.max(nums[0], nums[1]);
        }
        
        //the first 
        
        int[] fdp = new int[nums.length];
        fdp[0] = nums[0];
        fdp[1] = fdp[0];
        
        // the last
        int[] ldp = new int[nums.length];
        ldp[0] = 0;
        ldp[1] = nums[1];
        
        for(int i = 2; i < fdp.length-1; i++){
            fdp[i] = Math.max(fdp[i-2] + nums[i] , fdp[i-1]);
        }
        
        for(int i = 2; i < ldp.length; i++){
            ldp[i] = Math.max(ldp[i-2] + nums[i] , ldp[i-1]);
        }
        
        return Math.max(fdp[nums.length-2], ldp[nums.length-1]);
        
    }
}