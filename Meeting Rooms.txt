/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
class Solution {
    public boolean canAttendMeetings(Interval[] intervals) {
        Arrays.sort(intervals,(a,b)->a.start - b.start);
        
        if(intervals == null || intervals.length == 0 || intervals.length == 1){
            return true;
        }
        int start = intervals[0].start;
        int end = intervals[0].end;
        
        for(int i = 1; i < intervals.length; i++){
            if(intervals[i].start >= end){
                end = Math.max(end, intervals[i].end);
            }else{
                return false;
            }
        }
        
        return true;
    }
}