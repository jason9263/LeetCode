class Solution {
public:
    vector<string> generateParenthesis(int n) {
        int scale = n;
        string s = "";
        vector<string> result;
        
        if(n == 0){
            result.push_back(s);
            return result;
            
        }else if (n == 1){
            s = "()";
            result.push_back(s);
            return result;
        }
        else {
            
        int left = 1;
        int right = 0;
        
        s = "(";
        
        
        
        result = generateP(scale,left ,right,s,result);
        
        return result;
        }


    }
    
    vector<string> generateP(int n ,int left ,int right , string s, vector<string> result){
        
        if(left == n && right == n){
            
            result.push_back(s);
            
            
        }
        
        else if(left >= right && left <n ){
            
            result = generateP(n,left+1,right ,s+"(", result);
            
            result = generateP(n, left ,right+1,s + ")", result);
            
        }else if(left == n && right < n){
            
            result = generateP(n , left ,right+ 1,s + ")", result);
            
        }
        
        
        return result;
        
        
    }
    
    
};