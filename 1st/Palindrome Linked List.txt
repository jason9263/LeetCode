/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        vector<int> result;
        while(head != NULL){
            result.push_back(head->val);
            head = head->next;
        }
        
        int capacity = result.size();
        int temp = 0;
        if(capacity % 2 ==0){
            temp = capacity/2;
        }
        
        
        if(capacity % 2 == 1){
            temp = capacity/2;
        }
        
        for(int i = 0 ; i < temp; i++){
            if(result[i] != result[capacity-1-i]){
                return false;
            }
        }
        
        
        return true;
        
    }
};