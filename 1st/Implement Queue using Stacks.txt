class Queue {
public:
    // Push element x to the back of queue.
    void push(int x) {
        jsr.push(x);
    }

    // Removes the element from in front of queue.
    void pop(void) {
        if(jsl.size() != 0){
            jsl.pop();
        }else{
                int i = jsr.size();
                if(i == 0){
                    
                }else{
                    while(i > 0){
                        int temp = jsr.top();
                        jsl.push(temp);
                        jsr.pop();
                        i--;
                    }
                    jsl.pop();
                }
        }
    }

    // Get the front element.
    int peek(void) {
        if(jsl.size() != 0){
            return jsl.top();
        }else{
            int i = jsr.size();
            
            if(i == 0){
                
            }else{
                while( i > 0){
                    int temp = jsr.top();
                    jsl.push(temp);
                    jsr.pop();
                    i--;
                }
                return jsl.top();
            }
            
        }
    }

    // Return whether the queue is empty.
    bool empty(void) {
        if(jsl.size() == 0 && jsr.size() == 0){
            return true;
        }else{
            return false;
        }
    }
    
    private:
    stack<int> jsl;
    stack<int> jsr;
    
};