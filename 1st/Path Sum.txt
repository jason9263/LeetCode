/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool hasPathSum(TreeNode* root, int sum) {
     
     if(!root){
         return false;
     }
     int target = sum;
     sum = 0;
     int sign = -1;
     
     DFS(root,sum, target,sign);
     
     if(sign == 1){
         return true;
     }else{
         return false;
     }
     
        
    }
    
    
    void  DFS(TreeNode * root, int sum, int target, int &sign ){
        if(root != NULL && root->left == NULL && root->right == NULL){
            
            sum = sum + root->val;
            
            if (target == sum){
                sign = 1;
              
            }else{
               
            }
        }else if(root != NULL && root->left != NULL && root->right == NULL){
                sum = sum + root->val;
              
                    DFS(root->left,sum ,target ,sign);
                
                
                
            }
        else if(root != NULL && root->left != NULL && root->right != NULL){
            sum = sum + root->val;
           
                DFS(root->left, sum ,target, sign);
            
           
                 DFS(root->right, sum ,target, sign);
            
           
        }else if(root != NULL && root->left == NULL && root->right != NULL){
            sum = sum + root->val;
            
                DFS(root->right,sum ,target, sign);
            
        
        }
        
        


        
        
   
        
        
    }
    
    
};