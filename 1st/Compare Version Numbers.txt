class Solution {
public:
    int compareVersion(string version1, string version2) {
        string pattern = ".";
        
        vector<int> r1 = split(version1,pattern);
        vector<int> r2 = split(version2, pattern);
        
       
        if(r1.size() < r2.size()){
            int diff = r2.size() - r1.size();
            int i = 0;
            while(i < diff){
                r1.push_back(0);
                i++;
            }
        }else if(r1.size() > r2.size()){
            int diff = r1.size() - r2.size();
            int i = 0;
            while(i < diff){
                r2.push_back(0);
                i++;
            }
        }else{
           
        }
        
        
        int sizemin = r1.size();
        
        
        for(int i = 0 ; i < sizemin; i++){
            if(r1[i] < r2[i]){
                return -1;
            }else if (r1[i] > r2[i]){
                return 1;
            }else{
                
            }
        }
        
        return 0;
        
    }
    
    vector<int> split(string str, string pattern){
	int strsize = str.size();
	vector<int> result;
	str = str + pattern;

	int pos = 0;

	for (int i = 0; i < strsize; i++){
		pos = str.find(pattern,i);
		
		string temp = str.substr(i,pos-i);
		int itemp = stoi(temp);
        
		result.push_back(itemp);
		i = pos + pattern.size() - 1;
	}


	return result;
}


};