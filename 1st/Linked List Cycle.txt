/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        
        if(head == NULL){
            return false;
        }else if (head ->next == NULL){
            return false;
        }else {
            
            ListNode *one = head;
            ListNode *twice = head;
            ListNode *temp = head;
            int sign = -1;
            
            while(true){
                
                temp = twice->next;
                one = one->next;
                if(temp == NULL){
                    sign = 0;
                    break;
                }
                twice = temp->next;
                
                if(twice == NULL || one == NULL){

                
                    sign = 0;
                    
                    break;
                }
                
                
                if (twice->val ==  one->val ){
                    sign = 1;
                    break;
                    
                }
                
                
                
            }
            
            if(sign == 0){
                return false;
            }else if(sign == 1){
                return true;
            }else{
                
            }

            
        }

        
    }
};