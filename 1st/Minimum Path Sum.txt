class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        
        int rownum = grid.size();
        int colnum = grid[0].size();
        
        if(grid[0].size() == 0 || grid.size() == 0){
            return 0;
        }
        
        
        else  if(grid.size() == 1){
            int temp = 0;
            
           for(int i = 0 ; i < colnum; i++){
               temp = temp + grid[0][i];
           } 
           return temp;
        }
        
        
       else if(grid[0].size() == 1){
            int temp = 0;
            for(int i = 0 ; i < rownum; i++){
                temp = temp + grid[i][0];
            }
            return temp;
        }
        
        else{
            
            int *result = new int[colnum];
            
            int temp = 0;
            
            for(int i = 0 ; i < colnum; i++){
                temp = temp + grid[0][i];
                grid[0][i] = temp;
                result[i] = temp;
            }
            
            temp = 0;
            
            for(int i = 0 ; i < rownum; i++){
                temp = temp + grid[i][0];
                grid[i][0] = temp;
            }
            

            
            for(int i = 1 ; i < rownum; i++){
                for(int j = 1 ; j < colnum; j++){
                    
                    if(j == 1){
                        result[0] = grid[i][j-1];
                    }
                    
                    result[j] = min(result[j-1],result[j]) + grid[i][j];
                }
            }
            
            return result[colnum-1];
            
            
        }
        
        
        
        
    }
};