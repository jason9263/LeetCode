public class Solution {
    public int trap(int[] height) {
        //Find the i left max value
        
        if(height == null || height.length == 0){
            return 0;
        }
        
        
        int len = height.length;

        
        
        
        int[] left = new int[len];
        int[] right = new int[len];
        
        
        left[0] = height[0];
        
        for(int i = 1; i < len; i++){
            left[i] = Math.max(left[i-1],height[i]);    
        }
        
        
        //Find the i right max value
        right[len-1] = height[len-1];
        
        for(int i = len-1; i > 0; i--){
            right[i-1] = Math.max(right[i],height[i-1]);
        }
        
        //Finding the result
        int res = 0;
        
        for(int i = 0; i < len ; i++){
            int tmp = Math.min(left[i],right[i]);
            res +=  tmp > height[i] ? tmp - height[i] : 0;
        }
        
        return res;
        
        
    }
}