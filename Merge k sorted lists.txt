/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists == null || lists.length == 0){
            return null;
        }
        
        ListNode dummy = new ListNode(Integer.MIN_VALUE);
        ListNode head = dummy;
        
        PriorityQueue<ListNode> q = new PriorityQueue<ListNode>((a,b) -> a.val - b.val);
        
        for(ListNode list : lists){
            if(list != null){
                q.add(list);
            }
        }
        
        
        while(!q.isEmpty()){
            ListNode tmp = q.poll();
            head.next = tmp;
            
            if(tmp.next != null){
                q.offer(tmp.next);
            }
            
            head = tmp;
        }
        
        return dummy.next;
        
    }
}