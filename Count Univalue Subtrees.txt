/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    private int res = 0;
    
    public int countUnivalSubtrees(TreeNode root) {
        int[] count = new int[1];
        helper(root,count);
        
        return count[0];
    }
    
    private boolean helper(TreeNode root,int[] res){
        if(root == null){
            return true;
        }
        
        boolean left = helper(root.left,res);
        boolean right = helper(root.right,res);
        
        if(left && right){
            if(root.left != null && root.left.val != root.val){
                return false;
            }
            
            if(root.right != null && root.right.val != root.val){
                return false;
            }
            
            res[0]++;
            return true;
            
        }
        return false;
    }
    
    
}