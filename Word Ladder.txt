public class Solution {
    public int ladderLength(String beginWord, String endWord, Set<String> wordList) {
        //bfs
        
        Queue<String> jq = new LinkedList<String>();
        jq.add(beginWord);
        jq.add(null);
        
        Set<String> visited = new HashSet<String>();
        visited.add(beginWord);
        
        int level = 1;
        
        while(!jq.isEmpty()){
            String str = jq.poll();
            
            if(str != null){
                
                for(int i = 0; i < str.length(); i++){
                    
                    char[] chars = str.toCharArray();
                    
                    for(char c = 'a' ; c <= 'z'; c++){
                        chars[i] = c;
                        
                        String word = new String(chars);
                        
                        if(word.equals(endWord)){
                            return level + 1;
                        }
                        
                        if(wordList.contains(word) && !visited.contains(word)){
                            jq.add(word);
                            visited.add(word);
                        }
                        
                    }
                }
                
            }else{
                level++;
                
                if(!jq.isEmpty()){
                    jq.add(null);
                }
                
            }

        }
        
        return 0;
    
    }
}