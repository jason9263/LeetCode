/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        
            if(l1 == NULL && l2 == NULL){
                return l2;
            }
            
            else if(l2 == NULL && l1 != NULL){
                return l1;
            }
            
            else if (l1 == NULL && l2 != NULL){
                return l2;
            }
            else {
                
                ListNode *NewH ;
                ListNode *result;
                
                if(l1->val <= l2->val){
                    NewH = l1;
                    result = NewH;
                    
                    l1 = l1->next;
                    
                }else{
                    NewH = l2;
                    result = NewH;
                    
                    l2 = l2->next;
                    
                }
                
                while(l1 != NULL && l2 != NULL){
                    if(l1->val <= l2->val){
                        NewH->next = l1;
                        l1 = l1->next;
                        NewH = NewH->next;
                    }else{
                        NewH->next = l2;
                        l2 = l2->next;
                        NewH = NewH->next;
                    }
                    
                }
                
                while(l1 == NULL && l2 != NULL){
                    NewH->next = l2;
                    l2 = l2->next;
                    NewH = NewH->next;
                }
                
                while(l1 != NULL && l2 == NULL){
                    NewH->next = l1;
                    l1 = l1->next;
                    NewH = NewH->next;
                }
                
                
                return result;

            }

        
    }
};