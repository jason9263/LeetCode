
     class Solution {
public:
    bool wordBreak(string s, unordered_set<string>& wordDict) {
        
        if(wordDict.size() == 0){
            return false;
        }
        
        if(s.length() == 0){
            return true;
        }     
        
        string s2 = '#' + s; 
        int len = s2.size();
        
        vector<bool> possible(len,0);
        
        possible[0]  = true;
       
        
        for(int i = 1; i < len ; i++){
            
            for (int  k= 0 ; k < i; k++){
                
                possible[i] = possible[k] && (wordDict.find(s2.substr(k+1,i-k)) != wordDict.end());
                
                if(possible[i]){
                    
                    break;
                    
                }
            }
        }
        
        return possible[len -1];
        
    }
};