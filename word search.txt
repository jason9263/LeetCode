class Solution {
    public boolean exist(char[][] board, String word) {
        char[] w = word.toCharArray();
        for(int i = 0; i < board.length; i++){
            for(int j = 0; j < board[0].length; j++){
                if(dfs(board,w, i,j,0)){
                    return true;
                }
            }
        }
        return false;
    }
    
    
    public boolean dfs(char[][] board, char[] w, int x, int y, int index){
        if(index == w.length){
            return true;
        }
        if(x < 0 || x >= board.length|| y < 0 || y >= board[0].length ){
            return false;
        }
        if(w[index] != board[x][y]){
            return false;
        }
        
        board[x][y]^=256;
        
        boolean res = dfs(board,w, x+1,y,index+1) ||
            dfs(board,w,x-1,y,index+1)||
            dfs(board,w,x,y-1,index+1)
            || dfs(board,w,x ,y +1 , index+1);
        board[x][y]^= 256;
        
        return res;
    }
    
}