public class Solution {
    public boolean exist(char[][] board, String word) {
        
        if(board == null || board.length == 0 || board[0].length == 0){
            return false;
        }
        
        boolean[][] visited = new boolean[board.length][board[0].length];
        
        for(int i = 0 ; i < board.length; i++){
            for(int j = 0; j < board[0].length; j++){
        
                if((word.charAt(0) == board[i][j]) && helper(board, visited, i, j , 0,word)){
                    return true;
                }
        
            }
        }
        
        return false;
        
    }
    
    
    public boolean helper(char[][] board, boolean[][] visited,int i, int j , int level,String word){
        
        if(level == word.length()){
            return true;
        }
        
        if(i < 0 || j < 0 || i >= board.length || j >= board[0].length ||  board[i][j] != word.charAt(level) ||visited[i][j]){
            return false;
        }
        
        visited[i][j] = true;
        
        if(helper(board,visited,i-1,j,level+1,word)||
        helper(board,visited,i+1,j,level+1,word)||
        helper(board,visited,i,j-1,level+1,word)||
        helper(board,visited,i,j+1,level+1,word)){
            
            return true;
            
        }
        visited[i][j] = false;
        
        return false;
        
    }
    
    
    
}