class Solution {
    public List<String> removeInvalidParentheses(String s) {
        //sanity check
        //
        //
     
        List<String> res = new LinkedList<String>();
        if(s == null){
            return res;
        }
        Queue<String> q = new LinkedList<String>();
        HashSet<String> set = new HashSet<String>();
        q.offer(s);
        set.add(s);
        boolean found = false;
        
        while(!q.isEmpty()){
            String qs = q.poll();
            if(helper(qs)){
                res.add(qs);
                found = true;
            }
            
            if(found){
                continue;
            }
            
            for(int i = 0; i < qs.length(); i++){
                if(qs.charAt(i) != '(' && qs.charAt(i) != ')')
                    continue;
                
                    String tmps = qs.substring(0,i) + qs.substring(i+1);
                
                    if(!set.contains(tmps)){
                        
                        System.out.println(tmps);
                        
                        set.add(tmps);
                        q.add(tmps);

                    
                }
            }
        }
        
        return res;
    }
    
    public boolean helper(String s){
        int cnt  = 0;
        for(int i = 0; i < s.length(); i++){
            if(s.charAt(i) == '('){
                cnt++;
            }else if(s.charAt(i) == ')' && cnt-- == 0){
                return false;
            }
        }
        
        return cnt == 0;
    }
    
    
}