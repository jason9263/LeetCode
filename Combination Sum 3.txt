class Solution {
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        
     vector<vector<int>> result;
     
     vector<int> out;
     
     int level = 1;
     
     DFS(k,n, level, out, result);
     
     return result;
    }
    
    void  DFS(int k , int n, int level, vector<int> &out, vector<vector<int>> &result){
        
        if(n < 0){
            return;
        }
        
        if(n == 0 && out.size() == k){
            result.push_back(out);
        }
        
        for(int i = level ; i <= 9 ; i++){
            out.push_back(i);
            DFS(k, n-i, i + 1, out, result);
            out.pop_back();
        }

    }

};