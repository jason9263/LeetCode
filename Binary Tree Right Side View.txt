/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> result ;
        
        if(root == NULL){
            return result;    
        }
        
        queue<TreeNode*> nodequeue; 
        
        int pre = 0;
        
        nodequeue.push(root);
        nodequeue.push(NULL);
        
        while(nodequeue.size()){
            
            TreeNode *temp = nodequeue.front();
            
            
            
            nodequeue.pop();
            
            if(temp){
                
                pre = temp->val;
                
                if(temp->left){
                    nodequeue.push(temp->left);
                }
                
                if(temp->right){
                    nodequeue.push(temp->right);
                }
                
            }else if(temp == NULL && nodequeue.size()){

                
                result.push_back(pre);
                
                nodequeue.push(NULL);
                
            } else if(temp == NULL && nodequeue.size() == 0){
                result.push_back(pre);
                break;
            }
         
        }
        
        return result;
        
    }
};