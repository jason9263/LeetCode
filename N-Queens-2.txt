public class Solution {
    private int res = 0;
    
    public int totalNQueens(int n) {
        
        char[][] board = new char[n][n];
        
        for(int i = 0; i < n; i++){
            for(int j = 0; j <n ; j++){
                board[i][j] = '.';
            }
        }
        
        dfs(board,0);
        
        return res;
        
    }
    
    public void dfs(char[][] board, int colindex){
        
        if(colindex == board.length){
            res++;
            return;
        }
        
        for(int i = 0; i < board.length; i++){
            if(validate(board,i,colindex)){
                board[i][colindex] = 'Q';
                dfs(board,colindex+1);
                board[i][colindex] = '.';
            }
        }

    }
    
    public boolean validate(char[][] board ,int x, int y){
        
        for(int i = 0; i < board.length; i++){
            for(int j = 0; j < y; j++){
                if(board[i][j] == 'Q' &&(x == i || x+y == i+j || i-j == x -y)){
                    return false;
                }
            }
        }
        
        return true;
    }
    
    
    
    
}