class Solution {
    public int subarraySum(int[] nums, int k) {
        int len = nums.length;
        int[] sums = new int[len+1];
        
        HashMap<Integer,List<Integer>> map = new HashMap<>();
        LinkedList<Integer> zero = new LinkedList<Integer>();
        
        zero.add(0);
        map.put(0,zero);
        
        int cnt = 0;
        
        for(int i = 1; i <= len; i++){
         
            sums[i] = sums[i-1] + nums[i-1];
            if(map.containsKey(sums[i] - k)){
                cnt += map.get(sums[i] - k).size();
            }
            
            if(map.containsKey(sums[i])){
                map.get(sums[i]).add(i);
            }else{
                List<Integer> list = new LinkedList<Integer>();
                list.add(i);
                map.put(sums[i], list);
            }
            
        }
        
        return cnt;

    }
}