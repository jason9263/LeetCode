public class Solution {
    public int divide(int dividend, int divisor) {
        
        if(divisor == 0 || dividend == Integer.MIN_VALUE && divisor == -1){
            return Integer.MAX_VALUE;
        }
        
        if(dividend == 0){
            return 0;
        }
        
        int sign = 1;
        if((dividend > 0 && divisor > 0) ||(dividend < 0 && divisor < 0)){
            sign = 1;
        }else{
            sign = -1;
        }
        
        long end = (long)(dividend);
        long sor = (long)(divisor);
        
        end = (long)(Math.abs(end));
        sor = (long)(Math.abs(sor));
        
        if(sor== 1){
            return sign == 1? (int)end:(int)(-end);
        }
        
        

        
        int res = 0;
      
        while(end >= sor){
            
            long t = sor;
            long p = 1;
            
            while(end >= (t <<1)){
                t <<= 1;
                p <<= 1;
            }
            
            end = end - t;
            res += p;
           
            
        }
        

        
        return sign == 1 ? (int)(res):(int)(-res);
    }
}