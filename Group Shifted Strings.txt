public class Solution {
    public List<List<String>> groupStrings(String[] strings) {

        List<List<String>> result = new ArrayList<List<String>>();

        Map<String, List<String>> jm = new HashMap<String, List<String>>();


        for(int i = 0; i < strings.length; i++ ){
            String tempkey = findkey(strings[i]);
            if(jm.containsKey(tempkey)){
                jm.get(tempkey).add(strings[i]);
            }else{
                List<String> tempres = new ArrayList<String>();
                tempres.add(strings[i]);
                jm.put(tempkey,tempres);
            }
        }


        for(String m:jm.keySet()){

            Collections.sort(jm.get(m));
            result.add(jm.get(m));
        }

        return result;

    }

    public String findkey(String s){

        String temp = "";


        if(s.length() <= 1){
            return "0";
        }

        for(int i = 0; i < s.length()-1;i++){

            temp = temp +Integer.toString((s.charAt(i+1) - s.charAt(i) + 26 )%26)+" ";

        }

        return temp;
    }


}
