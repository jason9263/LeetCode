class Solution {
public:
    void solve(vector<vector<char>>& board) {
        int row = board.size();
        if(row <= 2){
            return;
        }
        
        
        int col = board[0].size();
        
        if(col <= 2){
            return ;
        }
        
        
        for(int i = 0 ; i < row; i++){

            if(board[i][0] == 'O'){
                reverse(i,0,row,col,board);
            }

            if(board[i][col-1] == 'O'){
                reverse(i,col-1,row, col,board);
            }
            
        }
        
        for(int j = 1; j < col-1; j++ ){
            if(board[0][j] == 'O'){
                reverse(0,j,row,col,board);
            }
            
            if(board[row-1][j] == 'O'){
                reverse(row-1,j,row,col,board);
            }
            
        }
        
        for(int i = 0 ; i < row; i++){
            for(int j = 0 ; j < col; j++){
                if(board[i][j] == 'O'){
                    board[i][j] = 'X';
                }else if(board[i][j] == '#'){
                    board[i][j] = 'O';
                }
            }
        }
        
        
    }
    
    
    void reverse(int i, int j, int row, int col,vector<vector<char>> &board){
        //up down left right
        

        if(board[i][j] == 'O'){
            board[i][j] = '#';
            
            if(i-1 >= 1  && board[i-1][j] == 'O'){
               reverse(i-1,j,row,col,board); 
            }
            
            if( i+1< row-1 && board[i+1][j] == 'O'){
                reverse(i+1,j,row,col,board);
            }
            
            if( j+1 <col-1 && board[i][j+1] == 'O'){
              reverse(i,j+1,row,col,board);  
            }
            
            if(j-1 >= 1  && board[i][j-1] == 'O'){
               reverse(i,j-1,row,col,board); 
            }
            
        }
    }
    
    
};