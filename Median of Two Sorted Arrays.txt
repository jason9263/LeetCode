public class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        
        int len1 = nums1.length;
        int len2 = nums2.length;
        
        if(len1 < len2){
            return findMedianSortedArrays(nums2,nums1);
        }
        
        if(len2 == 0){
            
            System.out.println("Jason");
            
            return (nums1[(len1-1)/2] + nums1[len1/2])/2.0;
        }
        
        
        
        int left = 0;
        int right = 2*len2;
        
        
        while(left <= right){
            int mid2 = left + (right - left)/2;
            
            int mid1 = len1 + len2 - mid2;
            
            double L1 = (mid1 == 0) ? Integer.MIN_VALUE:nums1[(mid1-1)/2];
            double L2 = (mid2 == 0) ? Integer.MIN_VALUE:nums2[(mid2-1)/2];
            
            
            double R1 = (mid1 == 2*len1) ? Integer.MAX_VALUE: nums1[mid1/2];
            double R2 = (mid2 == 2*len2) ? Integer.MAX_VALUE: nums2[mid2/2];
            
            if(L1 > R2){
                left = mid2+1;
            }else if(L2 > R1){
                right = mid2 -1;
            }else{
                return (Math.max(L1,L2) +Math.min(R1,R2))/2;
            }
            
        }
        
        
        
        return -1;
        
    }
}