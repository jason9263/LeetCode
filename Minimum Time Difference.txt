public class Solution {
    
   
    public int findMinDifference(List<String> timePoints) {
        int len = timePoints.size();
        
        int[] result = new int[len];
        
        result = helper(timePoints, result);
        
        Arrays.sort(result);
        
        int min = Integer.MAX_VALUE;
        
        for(int i = 1 ;i < result.length; i++){
            int tmp = Math.abs(result[i] - result[i-1]);
            int tmpmin = Math.min( tmp,  1440 - tmp);
            min = Math.min(min, tmpmin);    
        }
        
        int tmp = Math.min(Math.abs(1440 - result[len-1] + result[0]) , result[len-1] - result[0]);
        
        min = Math.min(min, tmp);
       
        return min;
        
    }
    
    public int[] helper(List<String> timePoints, int[] result){
        
        int index = 0;
        
        for(String tmps : timePoints){
            String[] word = tmps.split(":");
            int tmp1 = Integer.valueOf(word[0]) * 60;
            int tmp2 = Integer.valueOf(word[1]);
            
            int sumtmp = tmp1 + tmp2;
            result[index++] = sumtmp;
            
        }
        
        return result;
        
    }
    
}