/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int largestBSTSubtree(TreeNode root) {
        if(root == null){
            return 0;
        }
        
        if(root.left == null && root.right == null){
            return 1;
        }
        
        if(isvalid(root,Integer.MIN_VALUE,Integer.MAX_VALUE)){
            return count(root);
        }else{
            return Math.max(largestBSTSubtree(root.left) , largestBSTSubtree(root.right));
        }
        
    }
    
    public boolean isvalid(TreeNode root, int min, int max){
        if(root == null){
            return true;
        }
        
        if(root.val >= max || root.val <= min){
            return false;
        }
        
     
        return isvalid(root.left, min, root.val) && isvalid(root.right,root.val,max);
        
    }
    
    public int count(TreeNode root){
        if(root == null){
            return 0;
        }
        
        if(root.left ==null && root.right == null){
            return 1;
        }
        
        
        return 1 + count(root.left) + count(root.right);
        
        
        
    }    
    
    
    
    
    
    
    
}