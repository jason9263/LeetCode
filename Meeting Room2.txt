/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public int minMeetingRooms(Interval[] intervals) {
        if(intervals == null || intervals.length == 0){
            return 0;
        }
        
        
        int[] start = new int[intervals.length];
        int[] end = new int[intervals.length];
        
        int index = 0;
        
        for(Interval tmp : intervals){
           start[index] = tmp.start;
           end[index] = tmp.end;
           index++;
          
        }
        
        
        Arrays.sort(start);
        Arrays.sort(end);
        
        
        int res = 0;
        int endpos = 0;
        
        for(int i = 0;i < intervals.length;i++){
            if(start[i] < end[endpos]){
                res++;
            }else{
                endpos++;
            }
        }
        
        
        return res;
        
        
    }
}