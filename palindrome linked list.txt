/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isPalindrome(ListNode head) {
        //corner case
        if(head == null || head.next == null){
            return true;
        }

        //find the middle
        
        ListNode fast = head;
        ListNode slow = head;
        
        Stack<Integer> js = new Stack<Integer>();
        
        js.push(slow.val);
        
        while(fast.next != null && fast.next.next != null){
            slow = slow.next;
            fast = fast.next.next;
            js.push(slow.val);
        }
        

        //using stack to save the previous result
        //odd
        if(fast.next == null){
            js.pop();
            
        }
            while(slow.next != null){
                
                slow = slow.next;
                
                int temp = js.peek();
                js.pop();
                if(temp == slow.val){
                    
                }else{
                    return false;
                }

        }
        return true;
        
    }
}