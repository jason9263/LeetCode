/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    
    private int res = Integer.MAX_VALUE;
    private int size = 0;
    private List<Integer> list = new ArrayList<Integer>();
    
    public int getMinimumDifference(TreeNode root) {
        helper(root);
        size = list.size();
        int[] nums = new int[size];
        
        for(int i = 0; i < size; i++){
            nums[i] = list.get(i);
        }
        
        
        for(int i = 0; i < size -1; i++){
            res = Math.min(res, Math.abs(nums[i+1] - nums[i]));
        }
        
        return res;
        
    }
    
    public void helper(TreeNode root){
        if(root == null){
            return;
        }else if(root.left == null && root.right == null){
            list.add(root.val);
            return;
        }else{
            helper(root.left);
            list.add(root.val);
            helper(root.right);
        }
    }
    
    
    
}