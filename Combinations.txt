public class Solution {
  
    public static List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        
        List<Integer> tmpres = new ArrayList<Integer>();
        
        if(k > n || n <= 0 || k <= 0){
            return res;
        }
     
        res = helper(res, tmpres,0,1,k,n);

        return res;
    }
    
    
    public static List<List<Integer>> helper(List<List<Integer>> res, List<Integer> tmpres, int depth, int start,int k, int n){
        if(depth == k){
            List<Integer> elementres = new ArrayList<Integer>(tmpres);
            res.add(elementres);
         
        }else{
            for(int i = start; i <=n; i++){
                tmpres.add(i);
                
                res = helper(res, tmpres,depth+1,i+1,k,n);
                
                tmpres.remove(tmpres.size()-1);
            }
        }
     return res;
    }

}