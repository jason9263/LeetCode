public class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        int k = 2;
        
        int[] count = new int[256];
        
        int num = 0, i = 0, res = 0;
        for (int j = 0; j < s.length(); j++) {
        
            if (count[s.charAt(j)]++ == 0) 
                num++;
            if (num > k) {
                while (--count[s.charAt(i++)] > 0);
                num--;
            }
            res = Math.max(res, j - i + 1);
        }
        return res;
    }
}



class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        int k = 2;
        
        
        int[] count = new int[256];
        
        int num = 0;
        int i = 0;
        int res = 0;
        
        
        for(int j = 0; j < s.length() ; j++){
            
            char c = s.charAt(j);
        
            if(count[c]++ == 0){
                num++;
            }
            
            if(num > k){
                
                while(--count[s.charAt(i++)]  > 0 ){
                    
                }
                
                num--;
            }
            
            res = Math.max(res, j - i + 1);
            
        }
        
        return res;
        
    }
}