public class Solution {
    public int maxRotateFunction(int[] A) {
      if(A == null || A.length == 0){
          return 0;
      }  
        
      long max = Integer.MIN_VALUE;     
      long sum = 0;
       int n = A.length ;
        
      for(int i = 0; i < n; i++){
          sum += A[i];
      }
        
      long[] dp = new long[n];
      long tmpsum = 0;
      for(int i = 0; i < n; i++){
            tmpsum += i*A[i];
      }   
        dp[0] = tmpsum;
        max = Math.max(max,tmpsum);
        
        int times = n -1;
        int index = 1;
        while(times > 0){
            tmpsum = 0;
            tmpsum = dp[index-1] + sum - (n)*(A[n-index]);
            
            dp[index] = tmpsum;
            max = Math.max(max,tmpsum);
            times--;
            index++;
        }
        
        
    return (int)max;
         
    }
}