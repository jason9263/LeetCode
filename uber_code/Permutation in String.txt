public class Solution {
    public boolean checkInclusion(String s1, String s2) {
        boolean res = false;
        int len = s1.length();
               
        boolean[] visited = new boolean[len];
        Arrays.fill(visited,false);
        StringBuilder out = new StringBuilder();
        if(s1.length() > s2.length()){
            return false;
        }

        res = helper(out,s1,s2,visited,s1.length(),res);
        
        return res;
    }
    public boolean helper(StringBuilder out, String s1,String s2,boolean[] visited,int len,boolean res){
        if(out.length() == len){
            

            
            if(s2.contains(out.toString())){
                res= res|true;
            }else{
                res = res|false;
            }
        }else{
            
            for(int i = 0; i < len; i++){
                if(visited[i] == true){
                    continue;
                }
                
                out.append(s1.charAt(i));
                visited[i] = true;
                
                res = helper(out,s1,s2,visited,len,res);
                
                out.deleteCharAt(out.length()-1);
                visited[i] = false;
            }

        }
        
        return res;
    }

}






public class Solution {
    public boolean checkInclusion(String s1, String s2) {
        int len1 = s1.length();
        int len2 = s2.length();
        
        if(len1 > len2){
            return false;
        }
        
        int[] count = new int[26];
        for(int i = 0; i < len1; i++){
            count[s1.charAt(i) - 'a']++;
            count[s2.charAt(i) - 'a']--;
        }
        if(allZero(count)){
            return true;
        }
        
        for(int i = len1; i < len2 ; i++){
            count[s2.charAt(i) -'a']--;
            count[s2.charAt(i - len1)-'a' ]++;
            
            if(allZero(count)){
                return true;
            }
            
        }
        
        return false;
        
    }
    
    public boolean allZero(int[] count){
        for(int i = 0; i < 26; i++){
            if(count[i] != 0){
                return false;
            }
        }
        
        return true;
    }
    
    
}