/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
class Solution {
    public int minMeetingRooms(Interval[] intervals) {
        Map<Integer,Integer> map = new HashMap<Integer,Integer>();
        Set<Integer> set = new TreeSet<Integer>();
        
        for(Interval a : intervals){
            
            map.put(a.start, map.getOrDefault(a.start,0)+1);
            
            map.put(a.end, map.getOrDefault(a.end,0)-1);
            
            set.add(a.start);
            set.add(a.end);
        }
        
        int max = 0;
        int res = 0;

        for(int tmp : set){
            
            System.out.println(tmp);
            
            res += map.get(tmp);
            max = Math.max(max, res );
            
        }
        
        return max;
    }
}