public class Solution {
    public String simplifyPath(String path) {
        String[] word = path.split("/");
        Stack<String> s = new Stack<String>();
        
        for(String tmp : word){
            if(!s.isEmpty() && tmp.equals("..")){
                s.pop();
            }else if(!tmp.equals("") && !tmp.equals(".") && !tmp.equals("..")){
                s.push(tmp);
            }
        }
        
        List<String> list = new ArrayList<String>(s);
        
        return "/" + String.join("/",list);
        
        
    }
}



class Solution {
    public String simplifyPath(String path) {
        String[] words = path.split("/");
        
        Stack<String> stack = new Stack<String>();
        
        for(String tmp : words){
            if(!stack.isEmpty() && tmp.equals("..")){
                stack.pop();
            }else if(!tmp.equals("") && !tmp.equals(".")&& !tmp.equals("..")){
                stack.push(tmp);
            }
        }
        
        List<String> str = new ArrayList<>(stack);
        
        return "/" + String.join("/",str);
        
    }
}
