/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> largestValues(TreeNode root) {
        List<Integer> res = new LinkedList<Integer>();
        
        Queue<TreeNode> que = new LinkedList<TreeNode>();
        
        if(root == null){
            return res;
        }
        
        if(root.left == null && root.right == null){
            res.add(root.val);
            return res;
        }
        
        que.add(root);
        int curlen = 1;
        int max = Integer.MIN_VALUE;
        int nextlen = 0;
        
        while(que.size() > 0){
            
            max = Integer.MIN_VALUE;
            nextlen = 0;
            
            while(curlen > 0){
                
               
                
                TreeNode tmp = que.poll();
                max = Math.max(tmp.val,max);
                curlen--;
                
                if(tmp.left != null){
                    que.add(tmp.left);
                    nextlen++;
                }
                
                if(tmp.right != null){
                    que.add(tmp.right);
                    nextlen++;
                }
                
            }
            
            curlen = nextlen;
            res.add(max);
            
        }
        
        
        return res;
    }
}