/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists == null || lists.length == 0){
            return null;
        }
        
        ListNode dummy = new ListNode(-1);
        ListNode head = dummy;
        
        PriorityQueue<ListNode> p = new PriorityQueue<ListNode>(lists.length,  (a,b)-> a.val - b.val);
        
        for(ListNode node : lists){
            if(node != null){
                p.offer(node);
            }
        }
        
        while(!p.isEmpty()){
            head.next = p.poll();
            head = head.next;
            
            if(head.next != null){
                p.offer(head.next);
            }
        }
        
        
        return dummy.next;
    }
}