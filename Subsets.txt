class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        
        List<List<Integer>> res = new LinkedList<>();
        
        List<Integer> out = new LinkedList<>();
        
        Arrays.sort(nums);
        
        backtrack(res,out,nums,0);
        
        return res;
    }
    // ~~~~ + subset(i+1,end)
    public void backtrack(List<List<Integer>> res, List<Integer> out,int[] nums,int start){

        res.add(new LinkedList<Integer>(out));
        
        for(int i = start; i < nums.length; i++){
            out.add(nums[i]);
            
            backtrack(res, out, nums,i+1);
            
            out.remove(out.size()-1);
        }
    }
}