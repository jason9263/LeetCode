class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        
        int row = matrix.size();
        if(row == 0){
            return false;
        }
        
        int col = matrix[0].size();
        if(col == 0){
            return false;
        }
        
        for(int i = 0 ; i < row; i++){
            if(matrix[i][col-1] < target){
                continue;
            }else if(target >= matrix[i][0] && target <= matrix[i][col-1] ){
                if(findmid(matrix[i], target)){
                    return true;
                }
            }else if(matrix[i][0] > target){
                break;
            }
        }
        
        
        return false;
        
    }
    
    
    bool findmid(vector<int> temp, int target){
        int left = 0;
        int right = temp.size()-1;
        
        int mid = (left + right)/2;

        
        
        while(left < right){
            
            if(target > temp[mid]){
                left = mid+1;
            }else if(target < temp[mid]){
                right = mid-1;
            }else if(target == temp[mid]){
                return true;
            }
            
            mid = (left + right)/2;
        }
        
                
        if(left == right){
            if(temp[left] == target){
                return true;
            }else{
                return false;
            }
        }

        
        return false;
        
    }
    
    
};