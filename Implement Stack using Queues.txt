class Stack {
public:
    // Push element x onto stack.
    void push(int x) {
        if(first.size() == 0){
            first.push(x);
        }else {
            while(first.size() != 0){
                int temp = first.front();
                second.push(temp);
                first.pop();
            }
            
            first.push(x);
        }
    }

    // Removes the element on top of the stack.
    void pop() {
        if(first.size() == 0){
            
            if(second.size() == 0){
                return;
            }
            
            while(second.size() > 1){
                int temp = second.front();
                first.push(temp);
                second.pop();
            }
            
            second.pop();
            
            tempqueue = first;
            first = second;
            second = tempqueue;
            
            
        }else{
            first.pop();
        }
        
    }

    // Get the top element.
    int top() {
        if(first.size() == 0){
            
                        
            if(second.size() == 0){
                return 0;
            }
            
            while(second.size() > 1){
                int temp = second.front();
                first.push(temp);
                second.pop();
            }


            tempqueue = first;
            first = second;
            second = tempqueue;
            
            return first.front();
        }
        
        return first.front();
        
    }

    // Return whether the stack is empty.
    bool empty() {
        if(first.size() == 0 && second.size() == 0){
            return true;
        }else{
            return false;
        }
    }
    
    
private:
    queue<int>  first;
    queue<int> second;
    queue<int>  tempqueue;
};