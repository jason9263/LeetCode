public class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        List<Integer> out = new ArrayList<Integer>();
        
        Arrays.sort(candidates);
        
        
        helper(candidates,target,0,out,res);
        
        return res;
                
    }
    
    public void helper(int[] nums, int target, int start , List<Integer> out, List<List<Integer>> res ){
        if(target < 0){
            return;
        }
        
        else if(target == 0){
            res.add(new ArrayList<Integer>(out));
            return ;
        }else {
            
        for(int i = start; i < nums.length; i++){
            out.add(nums[i]);
            helper(nums,target- nums[i], i, out, res);
            out.remove(out.size()-1);
            
        }
            
        }
        
        

    }
    
}



