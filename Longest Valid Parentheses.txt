public class Solution {
    public int longestValidParentheses(String s) {
        Stack<Integer> st = new Stack<Integer>();
        int res = 0;
        
        if(s ==  null || s.length() == 0){
            return res;
        }

        for(int i = 0; i < s.length(); i++){
            if(st.isEmpty() || s.charAt(i) == '(' ){
                st.push(i);
            }else if(s.charAt(i) == ')'){
                int top = st.peek();
                if(s.charAt(top) == '('){
                    st.pop();
                }else{
                    st.push(i);
                }
            }
        }
        
        
        if(st.isEmpty()){
            return s.length();
        }
        
        int a = s.length();
        int b = 0;
        
        while(!st.isEmpty()){
            b = st.pop();
            
            res = Math.max(res, a - b - 1);
            
            a = b;
            
        }
        
        res = Math.max(res, a);
        
        
        return res;
    }
}