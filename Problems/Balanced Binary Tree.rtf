{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for a binary tree node.\
 * public class TreeNode \{\
 *     int val;\
 *     TreeNode left;\
 *     TreeNode right;\
 *     TreeNode(int x) \{ val = x; \}\
 * \}\
 */\
public class Solution \{\
    public boolean isBalanced(TreeNode root) \{\
        if (root == null)\{\
            return true;\
        \}\
        \
        else if(Math.abs(helper(root.left) - helper(root.right)) > 1)\{\
            return false;\
        \}\
        \
        return isBalanced(root.left) && isBalanced(root.right);\
        \
    \}\
    \
    \
    public int helper(TreeNode root)\{\
        if(root == null)\{\
            return 0;\
        \}\
        \
        return 1 + Math.max(helper(root.left), helper(root.right));\
    \}\
\}}