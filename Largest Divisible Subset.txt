class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        List<Integer> res = new ArrayList<>();
        Arrays.sort(nums);
        int len = nums.length;
        
        int maxLen = 0;
        int pos = 0;
        
        int[] parent = new int[len];
        int[] dp = new int[len];
        
        for(int i = len-1; i >= 0; i--){
            for(int j = i ; j < len; j++){
                if(nums[j] % nums[i] == 0 && dp[i] < dp[j] + 1){
                    dp[i] = dp[j] +1;
                    parent[i] = j;
                    
                    if(maxLen < dp[i]){
                        maxLen = dp[i];    
                        pos = i;
                    }   
                }
            }
        }
        
        
        for(int i = 0; i < maxLen; i++){
            res.add(nums[pos]);
            pos = parent[pos];
        }
        
        
        return res;
    }
}