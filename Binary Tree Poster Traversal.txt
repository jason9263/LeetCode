/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        
        vector<int>  result;
        
        if(root == NULL){
          
        }else{
            
            
            result = postT(root, result);
            
            
        }
        return result;
        
    }
    
    
    vector<int> postT(TreeNode * root, vector<int> &result){
        if(root == NULL){
            
        }else if(root != NULL && root->left == NULL && root->right == NULL){
            result.push_back(root->val);
        }else if(root != NULL && root->left != NULL && root-> right == NULL){
            postT(root->left,result);
            result.push_back(root->val);
        }else if(root != NULL && root->right != NULL && root->left == NULL){
            postT(root->right,result);
            result.push_back(root->val);
        }else if(root != NULL && root->right != NULL && root->right != NULL){
            postT(root->left,result);
            postT(root->right, result);
            result.push_back(root->val);
            
        }
        
        return result;
    }
    
    
    
    
    
    
};