/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> result = new ArrayList<String>();
        
        if(root ==  null){
            return result;
        }
        
        String temp = "";
        
        helper(result,root,temp);
        
        return result;
        
    }
    
    public void helper(List<String> result, TreeNode root,String temp){
        
        if(root.left == null && root.right == null){
            temp = temp + Integer.toString(root.val);
            result.add(temp);
            return;
        }
        
        
        else if(root.left != null && root.right == null){
            temp =  temp + Integer.toString(root.val) + "->";
            helper(result,root.left,temp);
        }
        
        else if(root.left == null && root.right != null){
            temp =  temp + Integer.toString(root.val) + "->";
            helper(result,root.right,temp);
        }
        
        else if(root.left != null && root.right != null){
            temp = temp + Integer.toString(root.val) +"->" ;
            helper(result,root.left,temp);
            helper(result,root.right,temp);
        }
        
    }
}