/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
    
    vector<string> result;
    
    string temp = "";
    

    binaryDFS(result,temp,root);

    return result;    
        
    }
    
    
    void binaryDFS(vector<string> &result, string temp, TreeNode *root){
        
        
        if(root == NULL){
            return ;
        }
        
        temp = temp.empty() ? to_string(root->val):temp + "->" + to_string(root->val);
        
        if(root != NULL && root->left == NULL && root->right == NULL){
            
            result.push_back(temp);
            
            return ;
            
        }
        
        if(root->left){
            
            binaryDFS(result, temp, root->left);
            
        }
        
        if(root->right){
            
            binaryDFS(result,temp, root->right);
            
        }
        
    }
 
};