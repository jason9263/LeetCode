class Solution {
public:
    int maxProfit(vector<int>& prices) {
        
        if(prices.size() <= 1){
            return 0;
        }
        
        
        int minprice = prices[0];
        int maxprofit = 0;
        int diff = 0;
        
        
        for(int i = 1; i < prices.size(); i++){
                
                minprice = min(minprice,prices[i]);
                maxprofit = max(maxprofit,prices[i]- minprice);
        }
        return maxprofit;
        
        
    }
};

///////////////////////////////////////////////////////////////
///class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int lens = prices.size();
        
        if(lens == 0 || lens == 1){
            return 0;
        }

        
        int minval = prices[0];
        int maxpro = 0;
        
        for (int i = 0 ; i < lens; i++){
            minval = min(prices[i], minval);
            maxpro = max(maxpro, prices[i] - minval);
        }
        
        return maxpro;
        
    }
};