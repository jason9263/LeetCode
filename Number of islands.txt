public class Solution {
    public int cnt = 0;
    
    public int numIslands(char[][] grid) {
        if(grid == null || grid.length == 0 || grid[0].length == 0){
            return 0;
        }
        
        int m = grid.length;
        int n = grid[0].length;
        
        for(int i = 0; i < m ;i++){
            for(int j = 0; j < n; j++){
                if(grid[i][j] == '1'){
                    helper(grid,i,j,m,n);
                    cnt++;
                }
            }
        }
        
        return cnt;
        
    }
    
    public void helper(char[][] grid, int i , int j,int m , int n){
        grid[i][j] = '#';
        if(i - 1 >= 0 && grid[i-1][j] == '1'){
            helper(grid,i-1,j,m,n);
        }
        
        if(i+1 < m && grid[i+1][j] == '1'){
            helper(grid,i+1,j,m,n);
        }
        
        if(j-1 >= 0 && grid[i][j-1] == '1'){
            helper(grid,i,j-1,m,n);
        }
        
        if(j+1 < n && grid[i][j+1] == '1'){
            helper(grid,i,j+1,m,n);
        }
        return ;
    }
    
    
    
}