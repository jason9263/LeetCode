public class Solution {
    public int minSubArrayLen(int s, int[] nums) {
     
     if(nums == null || nums.length == 0){
         return 0;
     }
     
     if(nums.length == 1 && nums[0] >= s){
         return 1;
     }else if(nums.length == 1 && nums[0] < s){
         return 0;
     }
     
     for(int i = 1; i < nums.length; i++){
         if(nums[i] >= s || nums[0] >= s){
             return 1;
         }

         nums[i] += nums[i-1];

     }
     
     
     int fast = 0;
     int low = 0;
     
     int res = Integer.MAX_VALUE;
     
     while(fast < nums.length){
         if(nums[fast] < s){
             fast++;
         }else if(nums[fast] == s){

             res = Math.min(res, fast+1);
             fast++;
             
         }else if(nums[fast] > s){
          if(nums[fast] - nums[low] >= s){
             res = Math.min(res, fast - low);
             low++;
         }else if(nums[fast] - nums[low] < s){
             fast++;
         }
         }

     }
     
    return res == Integer.MAX_VALUE? 0:res;     
        
    }
}