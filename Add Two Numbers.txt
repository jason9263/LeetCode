/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(!l1){
            return l2;
        }
        
        if(!l2){
            return l1;
        }
        
        
        ListNode *fake = new ListNode(INT_MIN);
        ListNode * cur = fake;
        int sum = 0;
        int count = 0 ;
        
        while(l1 != NULL || l2 != NULL){
            sum = 0;
            if(l1 != NULL && l2 != NULL){
                sum = count + l1->val + l2->val;
                count = sum/10;
                sum = sum % 10;
                
                ListNode * temp = new ListNode(sum);
                cur->next = temp;
                
                cur = cur->next;
                l1 = l1->next;
                l2 = l2->next;
                
            }else if(l1 != NULL && l2 == NULL){
                sum = count + l1->val;
                count = sum /10;
                
                sum = sum % 10;
                
                ListNode *temp = new ListNode(sum);
                cur->next = temp;
                
                cur = cur->next;
                l1 = l1->next;
                
            }else if(l1 == NULL && l2 != NULL){
                sum = count + l2->val;
                count = sum /10;
                
                sum = sum % 10;
                
                ListNode *temp = new ListNode(sum);
                cur->next = temp;
                
                cur = cur->next;
                l2 = l2->next;
            }
            
            
            
        }
        
        if(count != 0){
             ListNode *temp = new ListNode(count);
                cur->next = temp;
                
                cur = cur->next;
        }
        
        return fake->next;
        
        
    }
};