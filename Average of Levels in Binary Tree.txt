/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> res = new LinkedList<Double>();
        
        if(root == null){
            return res;
        }
        
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        
        q.offer(root);
        
        double sum = 0;
        int cnt = 1;
        int nextcnt = 0;
        double precnt = 0;
        
        while(!q.isEmpty()){
        
            precnt = cnt;
            sum = 0;
            nextcnt = 0;
            
            while(cnt > 0){
            
                TreeNode tmp = q.remove();
                cnt--;
                sum += tmp.val;
                
                if(tmp.left != null){
                    q.offer(tmp.left);
                    nextcnt++;
                }
                
                if(tmp.right != null){
                    q.offer(tmp.right);
                    nextcnt++;       
                }
            }
            
            cnt = nextcnt;
            res.add(sum/precnt);
        }
        
        return res;
    }
}