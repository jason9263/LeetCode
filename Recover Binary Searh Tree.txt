/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void recoverTree(TreeNode* root) {
        
        vector<TreeNode *> list;
        vector<int> vals;
        inorder(root,list,vals);
        sort(vals.begin(),vals.end());
        
        for(int i = 0; i < list.size(); i++){
            list[i]->val = vals[i];
        }
    }
    
    void inorder(TreeNode *root, vector<TreeNode *> &list,vector<int> &vals){
        if(!root){
            return;
        }
        
        
        inorder(root->left,list,vals);
        
        list.push_back(root);
        vals.push_back(root->val);
        
        inorder(root->right,list,vals);
        
    }
    
    
    
    
};