class Solution {

public:
    vector<int> findOrder(int numCourses, vector<pair<int, int>>& prerequisites) {
        
           vector<vector<int>> graph(numCourses, vector<int>(0));
           
           vector<int> in(numCourses,0);
           
           vector<int> res;
           queue<int> q;
           
           
           for(auto &a: prerequisites){
               in[a.first] = in[a.first] +1;
               graph[a.second].push_back(a.first);
           }
           
           for(int i = 0 ; i < numCourses; i++){
               if(in[i] == 0){
                   q.push(i);
               }
           }
           
           while(!q.empty()){
               
               int temp = q.front();
               res.push_back(temp);
               q.pop();
               for(auto &b : graph[temp]){
                   in[b]--;
                   if(in[b] == 0){
                       q.push(b);
                   }
               }
           }
           
           if(res.size() != numCourses){
               res.clear();
           }
           
            return res;

    }
};