public class Solution {
    public int search(int[] nums, int target) {
        
        int left =0;
        int right = nums.length -1;
        
        //Finding the minimum
        if(nums[left] > nums[right]){
            while(left != right -1){
                int mid = left +(right - left)/2;
                if(nums[mid] < nums[left] ){
                    right = mid;
                }else{
                    left = mid;
                }
            }
            
            int minindex = nums[left] < nums[right] ? left:right;
            
            if(target < nums[minindex] || target > nums[minindex-1]){
                return -1;
            }else if(target <= nums[minindex-1] && target >= nums[0] ){
                left = 0;
                right = minindex-1;
            }else if(target >= nums[minindex] && target <= nums[nums.length-1]){
                left = minindex;
                right = nums.length-1;
            }
        }
        
        
        //binary search
        
        while(left < right){
            int mid = left +(right - left)/2;
            
            if(target >  nums[mid]){
                left = mid+1;
            }else if(target < nums[mid]){
                right = mid-1;
            }else if(target == nums[mid]){
                return mid;
            }
        }
        
        return nums[left] == target ? left : -1;

        
    }
}