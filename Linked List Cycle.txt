/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        
        ListNode slow = head;
        ListNode fast = head;
        
        while(slow != null){
            
            slow = slow.next;
            
            if(fast.next == null){
                
                return false;
                
            }else if(fast.next.next == null){
                return false;
            }else{
                fast = fast.next.next;
            }
            
            if(slow.val == fast.val){
                return true;
            }
            
            
            
            
        }
        
        return false;
        
        
    }
}