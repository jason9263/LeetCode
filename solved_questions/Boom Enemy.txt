public class Solution {
    public int maxKilledEnemies(char[][] grid) {
        
        if(grid == null || grid.length == 0 || grid[0].length == 0){
            return 0;
        }
        
        int m = grid.length;
        int n = grid[0].length;
        int res = 0;
        int rowcnt = 0;
        int[] colcnt = new int[n];
        
        
        
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                
               if(j == 0 || grid[i][j-1] == 'W'){
                   rowcnt = 0;
                   for(int k = j; k < n && grid[i][k] != 'W'; k++){
                       rowcnt += (grid[i][k] == 'E' ? 1:0);
            //           System.out.println("rowcnt  "+i   +"   " + j +"   " + k +  "    " +rowcnt);
                   }
                   
                   
               }
               
               
               if(i == 0 || grid[i-1][j] == 'W'){
                   colcnt[j] = 0;
                   for(int k = i ; k < m && grid[k][j] != 'W'; k++){
                       colcnt[j] += (grid[k][j] == 'E'?1:0);
                   }
               }
               
               if(grid[i][j] == '0'){
                   
                   if(i == 1 && j == 1){
       //                System.out.println(rowcnt +"   " +  colcnt[j] + "  " +res);
                   }
                   
                   res = Math.max(res, rowcnt + colcnt[j]);
               }
               

               
                
            }
        }
        
        
        return res;
        
    }
}