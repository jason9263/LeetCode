public class Solution {
    public int[][] generateMatrix(int n) {
        int[][] res = new int[n][n];
        if(n == 0){
            return res;
        }
        

        int p = n;
        int val = 1;
        int col = -1;
        int row = -1;
        
        for(int i = 0; i < n/2; i++, p = p-2){
            for(col = i; col < i+p; col++){
                res[i][col] = val++;
            }
                        
           
            
            for(row = i+1; row < i + p ; row++){
                res[row][col-1] = val++;
            }
            
            
            for(col = i+p -2; col >= i; col--){
                res[row-1][col] = val++;
            }
            

            
            for(row = i+p-2; row > i; row--){
                res[row][col+1] = val++;
            }
            
        }
        
        
        if(n % 2 != 0){
            res[n/2][n/2] = val++;
        }
        
        
        return res;
        
    }
}

class Solution {
    public int[][] generateMatrix(int n) {
        int[][] matrix = new int[n][n];
        
        if(n == 0){
            return matrix;
        }
        
        int colbegin = 0;
        int colend = n-1;
        
        int rowbegin = 0;
        int rowend = n-1;
        
        int num = 1;
        
        while(colbegin <= colend && rowbegin <= rowend){
            for(int i = colbegin ; i <= colend; i++){
                matrix[rowbegin][i] = num++;
            }
            rowbegin++;
            
            for(int i = rowbegin; i <= rowend; i++ ){
                matrix[i][colend] = num++;
            }
            
            colend--;
            
            for(int i = colend; i >= colbegin; i--){
            
                if(rowbegin <= rowend){
                    matrix[rowend][i] = num++;
                }
            
            }
            
            rowend--;
            
            for(int i = rowend; i >= rowbegin; i--){
                if(colbegin <= colend){
                    matrix[i][colbegin] = num++;
                }
            }
            
            colbegin++;
        }
        
        return matrix;
        
    }
}