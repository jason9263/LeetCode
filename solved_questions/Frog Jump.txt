public class Solution {
    public boolean canCross(int[] stones) {
        if(stones == null || stones.length == 0 || stones[1] > 1){
            return false;
        }
        
        if(stones.length == 2){
            return true;
        }
        
        
        HashMap<Integer, Set<Integer>> map = new HashMap<Integer, Set<Integer>>();
        
        for(int i = 0 ; i < stones.length; i++){
            Set<Integer> set = new HashSet<Integer>();
            map.put(stones[i],set);
            
        }
        
        map.get(0).add(1);
        
        for(int i = 0; i < stones.length; i++){
            int stone = stones[i];
            
            for(int tmp : map.get(stone)){
                int len = stone + tmp;
                
                
                if(len == stones[stones.length -1]){
                    return true;
                }else{
                    if(map.containsKey(len))
                    {
                    map.get(len).add(tmp);
                    
                    if(tmp - 1 > 0){
                        map.get(len).add(tmp-1);
                    }
                    map.get(len).add(tmp+1);
                    }
                }
            }
        }

        
        return false;
    }
}