public class Solution {
    public int nextGreaterElement(int n) {
        char[] nchar = String.valueOf(n).toCharArray();
        int len = nchar.length;
        int index = -2;
        
        for(int i = len-1 ; i >= 0; i-- ){
            if( (i-1 >= 0) && nchar[i-1] >= nchar[i]){
                
            }else{
                index = i;
                break;
            }
        }
        
        if(index == 0){
            return -1;
        }else{
            
            //find geater
            char tmpc = nchar[index-1];
            char minchar = nchar[index];
            int pos = index;
            
            for(int i = index; i < len; i++){
                if(nchar[i] > tmpc){
                    if(nchar[i] > minchar){
                        
                    }else{
                        pos = i;
                        minchar = nchar[i];
                    }   
                }
            }
            
            //swap 
            
            nchar[index-1] = nchar[pos];
            nchar[pos] = tmpc;
            
            System.out.println(nchar[0]);
            System.out.println(nchar[1]);
            
            
            //sorting
            char[] tmp = new char[len - index];
            
            for(int i = index; i < len; i++){
                tmp[i - index] = nchar[i];
            }
            
            Arrays.sort(tmp);
            String tmp2s = String.valueOf(nchar).substring(0,index);
            StringBuilder sb = new StringBuilder(tmp2s);
            
            sb.append(String.valueOf(tmp));
            System.out.println(sb.toString());
    
            return Long.valueOf(sb.toString()) > Integer.MAX_VALUE ? -1: Integer.valueOf(sb.toString());
        }
    }
}