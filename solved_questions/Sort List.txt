/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode sortList(ListNode head) {
        
        if(head == null || head.next == null){
            return head;
        }
        
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        
        ListNode h1 = dummy;
        ListNode h2 = dummy;
        
        while(h2 != null && h2.next != null){
            h1 = h1.next;
            h2 = h2.next.next;
        }
        
        ListNode tmp = h1.next;
        h1.next = null;
        
        ListNode left = sortList(dummy.next);
        ListNode right = sortList(tmp);
        
        return merge(left,right);
        
        
        
        
    }
    
    public ListNode merge(ListNode h1, ListNode h2){

        
        ListNode dummy = new ListNode(-1);
        ListNode head = dummy;
        
        while(h1 != null && h2 != null){
            if(h1.val < h2.val){
                head.next = h1;
                h1 = h1.next;
            }else{
                head.next = h2;
                h2 = h2.next;
            }
            head = head.next;
        }
        
        if(h1 == null){
            head.next = h2;
        }
        
        else{
            head.next = h1;
        }
        
        return dummy.next;
        
    }
    
    
    
    
    
}