public class Solution {
    public int maxCoins(int[] nums) {
        int len = nums.length;
        int[][] dp = new int[len+2][len+2];
        int[] inums = new int[len+2];
        
        for(int i = 0 ; i < len ; i++){
            inums[i+1] = nums[i];
        }
        
        inums[0] = inums[len+1] = 1;
        
        for(int k = 1; k <= len; k++){
            
            for(int i = 1; i <= len -k + 1; i++){
                
                int j = i + k -1;
                
                for(int x = i ; x <= j ; x++){
                    dp[i][j] = Math.max(dp[i][j], dp[i][x-1] + dp[x+1][j] + inums[x] * inums[i-1] * inums[j+1]);
                }
            }
        }
        
        return dp[1][len];
    }
}



class Solution {
    public int maxCoins(int[] nums) {
        int n = nums.length; 
        int[] ext = new int[n+2];
        int[][] dp = new int[n+2][n+2];
        
        
        for(int i = 0; i < n; i++){
            ext[i+1] = nums[i];
        }
        
        ext[0] = 1;
        ext[n+1] = 1;
        
        for(int len = 1; len <=n ; len++){
            
            for(int i = 1; i <= n - len + 1; i++){
                
                int j = i + len -1;
                
                
                for(int k = i ; k <= j; k++){
                    dp[i][j] = Math.max(dp[i][j], dp[i][k-1] + dp[k+1][j] + ext[i-1]*ext[k]*ext[j+1]);
                }

            }

        }
        
        return dp[1][n];
        
        
    }
}
