/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        List<Integer> num = new ArrayList<Integer>();
        TreeNode root = null;
        
        if(head == null ){
            
           return root; 
           
        }
        
        if(head.next == null){
            root = new TreeNode(head.val);
            return root;
        }
        
        
        
        while(head != null){
            num.add(head.val);
            head = head.next;
        }
        
      
        
        root = helper( 0, num.size()-1, num);
        
        return root;
    }
    
    public TreeNode helper(int left, int right, List<Integer> num){
        
        if(left > right){
            return null ;
        }
        
        int mid = (left + right)/2;
        
        TreeNode root = new TreeNode(num.get(mid));
        
        root.left = helper(left, mid-1,num);
        root.right = helper(mid+1,right,num);
        
        
        return root;
        
    }
    
    
    
    
    
    
    
}