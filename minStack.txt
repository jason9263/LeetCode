public class MinStack {

    /** initialize your data structure here. */
    //classical stack
    public Stack<Integer> cs = new Stack<Integer>();
    //min stack
    public Stack<Integer> ms = new Stack<Integer>();

    public MinStack() {

    }

    public void push(int x) {
        if(cs.isEmpty()){
            cs.push(x);
            ms.push(x);
        }else{
            cs.push(x);
            int temp = ms.peek();
            if(x <= temp){
                ms.push(x);
            }else{

            }
        }
    }

    public void pop() {
        int temp = cs.peek();
        int tempm = ms.peek();

        if(temp == tempm){
            cs.pop();
            ms.pop();
        }else{
            cs.pop();
        }
    }

    public int top() {
        return cs.peek();
    }

    public int getMin() {
        return ms.peek();
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
